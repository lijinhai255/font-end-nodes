(window.webpackJsonp=window.webpackJsonp||[]).push([[212],{1361:function(t,s,a){"use strict";a.r(s);var e=a(24),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"implement-getrequired"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#implement-getrequired"}},[t._v("#")]),t._v(" Implement GetRequired")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Implement the advanced util "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" GetRequired"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" remains all the required fields\n\n\n\nFor example\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" GetRequired"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("P "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" keyof T as Omit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T, P"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" extends T ? never "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" P"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("P"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" I "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GetRequired"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" foo: number, bar?: string "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" // expected to be "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" foo: number "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);