(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{1077:function(s,e,t){s.exports=t.p+"assets/img/chunks.4b7a0b44.png"},1078:function(s,e,t){s.exports=t.p+"assets/img/chunk1.139d34a3.png"},1392:function(s,e,t){"use strict";t.r(e);var a=t(24),n=Object(a.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"webpack-优化-splitchunks-分包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack-优化-splitchunks-分包"}},[s._v("#")]),s._v(" webpack 优化 SplitChunks 分包")]),s._v(" "),e("h2",{attrs:{id:"splitchunks-插件配置选项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#splitchunks-插件配置选项"}},[s._v("#")]),s._v(" SplitChunks 插件配置选项")]),s._v(" "),e("ul",[e("li",[e("p",[e("code",[s._v("chunks")]),s._v(" 选项：决定要提取哪些模块。")]),s._v(" "),e("ul",[e("li",[s._v("默认是 "),e("code",[s._v("async")]),s._v("：只提取异步加载的模块，打包到一个文件中。")]),s._v(" "),e("li",[s._v("异步加载的模块：通过 "),e("code",[s._v("import('xxx')")]),s._v(" 或 "),e("code",[s._v("require(['xxx'], () => {})")]),s._v(" 加载的模块。")]),s._v(" "),e("li",[e("code",[s._v("initial")]),s._v("：提取同步加载和异步加载的模块。如果模块在项目中既异步加载又同步加载，则该模块会被提取两次，分别打包到不同的文件中。")]),s._v(" "),e("li",[s._v("同步加载的模块：通过 "),e("code",[s._v("import xxx")]),s._v(" 或 "),e("code",[s._v("require('xxx')")]),s._v(" 加载的模块。")]),s._v(" "),e("li",[e("code",[s._v("all")]),s._v("：不管异步加载还是同步加载的模块，都会被提取出来打包到一个文件中。")])])]),s._v(" "),e("li",[e("p",[e("code",[s._v("minSize")]),s._v(" 选项：规定被提取的模块在压缩前的最小大小，单位为字节。默认为 30000，只有超过 30000 字节才会被提取。")])]),s._v(" "),e("li",[e("p",[e("code",[s._v("maxSize")]),s._v(" 选项：提取出来的模块打包生成的文件大小不能超过 "),e("code",[s._v("maxSize")]),s._v(" 值。超过时会对其进行分割并打包生成新的文件。单位为字节，默认为 0，表示不限制大小。")])]),s._v(" "),e("li",[e("p",[e("code",[s._v("minChunks")]),s._v(" 选项：表示被提取的模块最小的引用次数，引用次数需超过或等于 "),e("code",[s._v("minChunks")]),s._v(" 值，才能被提取。")])]),s._v(" "),e("li",[e("p",[e("code",[s._v("maxAsyncRequests")]),s._v(" 选项：最大异步加载次数，默认为 6。")])]),s._v(" "),e("li",[e("p",[e("code",[s._v("maxInitialRequests")]),s._v(" 选项：打包后的入口文件加载时，还能同时加载的 JS 文件数量（包括入口文件），默认为 4。")]),s._v(" "),e("p",[e("strong",[s._v("优先级顺序")]),s._v("："),e("code",[s._v("maxInitialRequests")]),s._v(" / "),e("code",[s._v("maxAsyncRequests")]),s._v(" < "),e("code",[s._v("maxSize")]),s._v(" < "),e("code",[s._v("minSize")])])]),s._v(" "),e("li",[e("p",[e("code",[s._v("automaticNameDelimiter")]),s._v(" 选项：打包生成的 JS 文件名的分隔符，默认为 "),e("code",[s._v("~")]),s._v("。")])]),s._v(" "),e("li",[e("p",[e("code",[s._v("name")]),s._v(" 选项：打包生成的 JS 文件的名称。")])]),s._v(" "),e("li",[e("p",[e("code",[s._v("cacheGroups")]),s._v(" 选项：核心配置，用来提取模块。每一项代表一个提取模块的方案，下面是 "),e("code",[s._v("cacheGroups")]),s._v(" 每项中特有的选项，其余选项与外部一致，若 "),e("code",[s._v("cacheGroups")]),s._v(" 中有，就按配置的，没有则使用外面的配置。")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("test")]),s._v(" 选项：用来匹配要提取的模块的资源路径或名称。可以是正则表达式或函数。")]),s._v(" "),e("li",[e("code",[s._v("priority")]),s._v(" 选项：方案的优先级，值越大表示提取模块时优先采用此方案。默认值为 0。")]),s._v(" "),e("li",[e("code",[s._v("reuseExistingChunk")]),s._v(" 选项：当为 "),e("code",[s._v("true")]),s._v(" 时，如果要提取的模块在打包生成的文件中已存在，则重用该模块，而不是重新打包生成新的文件。")]),s._v(" "),e("li",[e("code",[s._v("enforce")]),s._v(" 选项：当为 "),e("code",[s._v("true")]),s._v(" 时，忽略外部的 "),e("code",[s._v("minSize")]),s._v("、"),e("code",[s._v("minChunks")]),s._v("、"),e("code",[s._v("maxAsyncRequests")]),s._v(" 和 "),e("code",[s._v("maxInitialRequests")]),s._v(" 设置。")])])])]),s._v(" "),e("h2",{attrs:{id:"webpack-bundle-analyzer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack-bundle-analyzer"}},[s._v("#")]),s._v(" webpack-bundle-analyzer")]),s._v(" "),e("div",{staticClass:"language-JS extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("npm install "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("save"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("dev webpack"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("bundle"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("analyzer\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" BundleAnalyzerPlugin "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"webpack-bundle-analyzer"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n")])])]),e("div",{staticClass:"language-JS extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("plugins")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BundleAnalyzerPlugin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])])]),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("单entry -> 不生效")]),s._v(" "),e("ul",[e("li",[s._v("只对同步文件生效 minChunks")]),s._v(" "),e("li",[s._v("maxsize minsize 强行拆包")]),s._v(" "),e("li",[s._v("文件 单独指定一个commons")])]),s._v(" "),e("p",[e("img",{attrs:{src:t(1077),alt:"alt text"}})]),s._v(" "),e("p",[e("img",{attrs:{src:t(1078),alt:"alt text"}})])])])])}),[],!1,null,null,null);e.default=n.exports}}]);