(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{1308:function(t,a,s){"use strict";s.r(a);var r=s(24),n=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"算法基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法基础"}},[t._v("#")]),t._v(" 算法基础")]),t._v(" "),a("h2",{attrs:{id:"_1-请你总结如何计算算法时间复杂度-空间复杂度。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-请你总结如何计算算法时间复杂度-空间复杂度。"}},[t._v("#")]),t._v(" 1.请你总结如何计算算法时间复杂度+空间复杂度。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("简单的数据结构：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("有序：栈、队列、链表、有序数据结构节省时间（存储空间小）")])]),t._v(" "),a("li",[a("p",[t._v("无序：集合、字典、散列表、无序列表数据结构（读取时间块）")])])])]),t._v(" "),a("li",[a("p",[t._v("复杂的数据结构：树、堆、图")])]),t._v(" "),a("li",[a("p",[t._v("算法复杂度如何分析")])])]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("复杂度分析是整个算法学习的精髓，只要掌握了它，数据结构和算法的内容基本上就掌握了一半。\n事后统计法：把代码跑一遍，通过统计、监控，就能得到算法执行的时间和占用的内存大小\n局限性在哪：测试结果非常依赖测试环境、测试结果受数据规模的影响很大(benchmark能解决但不适用于算法)\n我们需要一个不用具体的测试数据来测试，就可以粗略地估计算法的执行效率的方法。（大O复杂度表示法）T(n)=O(f(n))\n表示代码执行时间随数据规模增长的变化趋势，公式中的低阶、常量、系数部分并不左右增长趋势，所以都可以忽略。T(n)=O(2n2+2n+3)\n\n")])])]),a("h3",{attrs:{id:"benchmark"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#benchmark"}},[t._v("#")]),t._v(" benchmark")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("面向切面编程AOP无侵入式统计")])]),t._v(" "),a("li",[a("p",[t._v("benchmark基准测试方法，它并不是简单的统计执行多少次测试代码后对比时间，对测试有严密的抽样过程，执行多少次取决于采样数据能否完成统计，根据统计次数计算方差")])]),t._v(" "),a("li",[a("p",[t._v("时间复杂度如何分析")])])]),t._v(" "),a("h3",{attrs:{id:"算法时间复杂度具体分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法时间复杂度具体分析"}},[t._v("#")]),t._v(" 算法时间复杂度具体分析")]),t._v(" "),a("ul",[a("li",[t._v("只关注循环执行次数最多的一段代码")]),t._v(" "),a("li",[t._v("加法法则：总复杂度等于量级最大的那段代码的复杂度")]),t._v(" "),a("li",[t._v("乘法法则：嵌套代码的复杂度等于嵌套内外代码复杂度的乘积")]),t._v(" "),a("li",[t._v("有二分查找的话则为O(logN)")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(876),alt:"算法时间复杂度具体分析"}})]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("时间复杂度O(log2n)\n实际上，不管是以2为底、以3为底，还是以10为底，我们可以把所有对数阶的时间复杂度 O(log2n)")]),t._v(" "),a("p",[a("img",{attrs:{src:s(877),alt:"alt text"}})]),t._v(" "),a("h3",{attrs:{id:"空间复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空间复杂度"}},[t._v("#")]),t._v(" 空间复杂度")]),t._v(" "),a("p",[t._v("我们常见的空间复杂度就是O(1)、O(n)、O(n2),像O(logn)、O(nlogn)这样的对数阶复杂度平时都用不到。")]),t._v(" "),a("h3",{attrs:{id:"工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工具"}},[t._v("#")]),t._v(" 工具")]),t._v(" "),a("p",[t._v("Bubble sort\ncs.usfca.edu\ncsanim.com\nvisualgo.net\nalgorithm-visualizer.org")]),t._v(" "),a("h2",{attrs:{id:"_2-什么是栈-javascript中有哪些栈的具体应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-什么是栈-javascript中有哪些栈的具体应用"}},[t._v("#")]),t._v(" 2.什么是栈？JavaScript中有哪些栈的具体应用？")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("栈是一种特殊的线性数据结构，其特点是后进先出（LIFO，Last In First Out）。栈的操作主要包括入栈（push）和出栈（pop），入栈是将新元素添加到栈顶，出栈则是移除栈顶元素。\n具体应用：值类型变量存储在栈 、浏览器历史记录\n")])])])])}),[],!1,null,null,null);a.default=n.exports},876:function(t,a,s){t.exports=s.p+"assets/img/1.d49fc11e.png"},877:function(t,a,s){t.exports=s.p+"assets/img/2.82b7d725.png"}}]);