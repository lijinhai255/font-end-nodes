(window.webpackJsonp=window.webpackJsonp||[]).push([[233],{1404:function(t,s,a){"use strict";a.r(s);var n=a(24),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"前端面试小册子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端面试小册子"}},[t._v("#")]),t._v(" 前端面试小册子")]),t._v(" "),s("h2",{attrs:{id:"如何理解vue3的响应式系统-vue3-使用基于proxy更快了"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何理解vue3的响应式系统-vue3-使用基于proxy更快了"}},[t._v("#")]),t._v(" 如何理解vue3的响应式系统，Vue3 使用基于Proxy更快了？")]),t._v(" "),s("ul",[s("li",[t._v("使用基于Proxy初始化时懒处理，用户访问才做拦截处理，初始化更快一些，不是运行的时候更快了。")]),t._v(" "),s("li",[t._v("Vue3的前应式系块是其最技心的留分之一，它基于 ES6的 proxy 对象进行了金新的实现，与 Vue2 基于 Obect.defineproperty 的实现相比，不仅更离效还更强大。")])]),t._v(" "),s("h3",{attrs:{id:"主要概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主要概念"}},[t._v("#")]),t._v(" 主要概念:")]),t._v(" "),s("ol",[s("li",[t._v("Reactive 対象: 使用 reactive 函数可以将普通的 JavaScript 对象转换为响应式对象。")]),t._v(" "),s("li",[t._v("Ref: 使用 ref 函致可以创建一个包含响应式值的单一引用。")]),t._v(" "),s("li",[t._v("Computed: [omputed] 函数用于创建依赖其他响应式对象或值的计算属性,")]),t._v(" "),s("li",[t._v("Wateh 和 WatchEffect: 允许你观察响应式数据的变化，并执行相应的操作。")])]),t._v(" "),s("h3",{attrs:{id:"工作原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[t._v("#")]),t._v(" 工作原理:")]),t._v(" "),s("ol",[s("li",[t._v('依赖追踪:当你访问的应式对象的某个属性时,Vue 会自动“记住”这个访间，并将当前的"效果”(effect，通常是一个相件的渲染函致或一个 watcher)添加到这个属性的依赖列表中。')]),t._v(" "),s("li",[t._v('响应式更新: 当你修改鹌应式对象的某个属性时，Vue 会找到依赖这个属性的所有效果，并将它们标记为"脏”(slale)以便重新执行或灌染。')]),t._v(" "),s("li",[t._v("批量更新: Vue 3 的响应式系统会聪朗地批量更新效果，以道免不必要的重复执行。这一切都是自动、高效地完成的。")]),t._v(" "),s("li",[t._v("嵌要属性: 由于使用了 Proxy，Vue 3 能够自动地使对象的我套属性也变成响应式的。d.")]),t._v(" "),s("li",[t._v("数组支持: Vue 3的响应式系地网样支持数组，并能捕捉到数姐的变异操作。")]),t._v(" "),s("li",[t._v("懒求值: computed 属性具有懒求值(lazy-evaluation)的特性，只有当其依移的数据发生变化时，才会重新求值，")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" reactive"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" watch "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" countRef "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ret")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" double "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("computed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建响应式对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reactive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建 watcher")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("watch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监听目标")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("newVal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldVal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("count changed: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("oldVal"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" => ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("newVal"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修改状态，触发响应")]),t._v("\nstate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n")])])]),s("h3",{attrs:{id:"性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[t._v("#")]),t._v(" 性能优化：")]),t._v(" "),s("ul",[s("li",[t._v("Shallow Reactive 和 Shallow Ref：可以用于创建“浅”响应式对象，即不会深入到对象属性。")]),t._v(" "),s("li",[t._v("Readonly：可以用于创建只读的响应式对象。")]),t._v(" "),s("li",[t._v("Batching：通过异步刷新机制和 nextTick，Vue 3 使更新能够被批量地合并成单次更新，减少 DOM 操作和计算。")]),t._v(" "),s("li",[t._v("Suspense 和异步操作：与组件式系统结合，能有效地管理异步组件状态。")])]),t._v(" "),s("p",[t._v("Vue3 的响应式系统不仅是基于与 MVVM 架构的基础，还可以作为一个独立的响应式状态管理层用于其他场景和框架。这也是为什么 Vue 3 的 Composition API 受到了广泛的关注，因为它允许更灵活、更组合化地维护组件状态。")]),t._v(" "),s("h2",{attrs:{id:"什么是-suspense-组件-它是如何实现的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-suspense-组件-它是如何实现的"}},[t._v("#")]),t._v(" 什么是 Suspense 组件，它是如何实现的？")]),t._v(" "),s("p",[s("strong",[t._v("回答：")]),s("br"),t._v("\nVue 3 中的 Suspense 组件是用于处理异步组件的一种机制。当在 "),s("code",[t._v("setup")]),t._v(" 函数中存在异步操作并希望在这些异步操作加载完成前显示一个 “fallback” 内容（如加载指示器）时，就可以使用 Suspense。")]),t._v(" "),s("h3",{attrs:{id:"工作原理-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工作原理-2"}},[t._v("#")]),t._v(" 工作原理")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("捕捉异步操作")]),s("br"),t._v("\nSuspense 可以捕捉其作用域内的异步操作。当这些组件尚未被解析完成（通常是网络加载）时，Suspense 会渲染它的 "),s("code",[t._v("fallback")]),t._v(" 插槽内容。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("与 "),s("code",[t._v("async setup()")]),t._v(" 配合")]),s("br"),t._v("\n在组件的 "),s("code",[t._v("setup")]),t._v(" 函数中，如果返回的是一个 "),s("code",[t._v("Promise")]),t._v("，那么 Vue 会等待这个 "),s("code",[t._v("Promise")]),t._v(" 解析完毕再渲染实际内容。否则，就会渲染 "),s("code",[t._v("fallback")]),t._v(" 内容。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("兼容性")]),s("br"),t._v("\nSuspense 也可以兼容旧应用。在这种情况下，内部的异步操作也能被 Suspense “捕捉”。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Reactivity")]),s("br"),t._v("\n由于 Suspense 基于 Vue 的响应式系统，所以一旦异步操作解析完成，Suspense 会自动重新渲染，替换 "),s("code",[t._v("fallback")]),t._v(" 为实际内容。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("插槽")]),s("br"),t._v("\nSuspense 使用了两个插槽 —— "),s("code",[t._v("default")]),t._v(" 和 "),s("code",[t._v("fallback")]),t._v("。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("default")]),t._v(" 插槽：用于传递希望渲染的实际内容。")]),t._v(" "),s("li",[s("code",[t._v("fallback")]),t._v(" 插槽：用于在等待异步操作加载期间显示的占位内容。")])])])]),t._v(" "),s("h3",{attrs:{id:"vue-3-suspense-组件示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-suspense-组件示例"}},[t._v("#")]),t._v(" Vue 3 Suspense 组件示例")]),t._v(" "),s("p",[t._v("以下示例展示了如何使用 "),s("code",[t._v("Suspense")]),t._v(" 组件来异步加载子组件。当子组件尚未加载完成时，将显示 “Loading...” 文本作为占位内容。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Suspense")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 默认插槽：异步组件加载完成后渲染 --\x3e")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("#default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("AsyncComponent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- fallback 插槽：在异步组件加载未完成之前显示的占位内容 --\x3e")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("#fallback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Loading..."),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("Suspense")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" defineAsyncComponent "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 defineAsyncComponent 来定义异步加载的组件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" AsyncComponent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineAsyncComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./AsyncComponent.vue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("components")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    AsyncComponent\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("在这个例子中，"),s("code",[t._v("AsyncComponent")]),t._v(" 是一个异步组件，只有当这个组件完全加载和初始化后，"),s("code",[t._v("Suspense")]),t._v(" 才会从展示 “Loading...” 切换到展示这个组件。")]),t._v(" "),s("p",[t._v("总的来说，"),s("code",[t._v("Suspense")]),t._v(" 组件提供了一种优雅且易用的方式来处理异步依赖，使得用户在异步渲染时依旧能获得较为流畅、友好的体验。")]),t._v(" "),s("h2",{attrs:{id:"vue-3-中-ref-和-reactive-有何区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-中-ref-和-reactive-有何区别"}},[t._v("#")]),t._v(" Vue 3 中，"),s("code",[t._v("ref")]),t._v(" 和 "),s("code",[t._v("reactive")]),t._v(" 有何区别？")]),t._v(" "),s("p",[s("strong",[t._v("答案：")])]),t._v(" "),s("ul",[s("li",[t._v("在 Vue 3 中，"),s("code",[t._v("ref")]),t._v(" 和 "),s("code",[t._v("reactive")]),t._v(" 都是用于创建响应式数据对象，二者各自有着差异化的使用场景。")])]),t._v(" "),s("h3",{attrs:{id:"ref"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ref"}},[t._v("#")]),t._v(" "),s("code",[t._v("ref")])]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("单值响应式")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("ref")]),t._v(" 用于创建单值的响应式引用，通常用于基本类型（如 "),s("code",[t._v("String")]),t._v(", "),s("code",[t._v("Number")]),t._v(", "),s("code",[t._v("Boolean")]),t._v("）。")])])]),t._v(" "),s("li",[s("strong",[t._v("访问方式")]),t._v(" "),s("ul",[s("li",[t._v("访问实际值时需要通过 "),s("code",[t._v("ref")]),t._v(" 对象的 "),s("code",[t._v(".value")]),t._v(" 属性，例如："),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("strong",[t._v("模板中的简化")]),t._v(" "),s("ul",[s("li",[t._v("在模板中，你不需要使用 "),s("code",[t._v(".value")]),t._v("，Vue 会自动为你解引用："),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{ count }} "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 自动解引用 --\x3e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("strong",[t._v("可更新性")]),t._v(" "),s("ul",[s("li",[t._v("你可以通过 "),s("code",[t._v("count.value = 1")]),t._v(" 来更新其值。")])])]),t._v(" "),s("li",[s("strong",[t._v("拆分使用")]),t._v(" "),s("ul",[s("li",[t._v("如果想将 "),s("code",[t._v("ref")]),t._v(" 创建的响应式对象拆分到其他数据结构时（例如在 "),s("code",[t._v("setup")]),t._v(" 函数中返回给外部），需要使用 "),s("code",[t._v("toRefs")]),t._v(" 或 "),s("code",[t._v("toRef")]),t._v(" 来保持其响应性。")])])])]),t._v(" "),s("div",{staticClass:"language-javaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script setup"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ref"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" toRefs "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 创建一个单值 ref")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 将该 ref 放入一个普通对象中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  count\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 如果直接解构 state：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    const { count } = state")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    那么在模板或其它地方使用解构出来的 count 时会丢失响应性")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4. 使用 toRefs() 来保持拆分后的响应性")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" countRef "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toRefs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 现在 countRef 本身仍是一个 ref，能够在模板或其它逻辑中正常触发响应式更新")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" countRef "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button @click"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"countRef++"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Increment"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"reactive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reactive"}},[t._v("#")]),t._v(" "),s("code",[t._v("reactive")])]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("对象响应式")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("reactive")]),t._v(" 用于创建"),s("strong",[t._v("复杂对象")]),t._v("的响应式数据。")])])]),t._v(" "),s("li",[s("strong",[t._v("直接访问属性")]),t._v(" "),s("ul",[s("li",[t._v("访问 "),s("code",[t._v("reactive")]),t._v(" 创建的响应式对象属性时，不需要额外的 "),s("code",[t._v(".value")]),t._v("，例如："),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reactive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("strong",[t._v("对象展开")]),t._v(" "),s("ul",[s("li",[t._v("由于 "),s("code",[t._v("reactive")]),t._v(" 返回的是一个 Proxy 包装过的对象，如果想在其他对象或函数中使用其属性，也可结合 "),s("code",[t._v("toRefs")]),t._v(" 等 API 来解构并保持响应式。")])])]),t._v(" "),s("li",[s("strong",[t._v("适用场景")]),t._v(" "),s("ul",[s("li",[t._v("当需要对对象内部多个属性进行跟踪时，更适合使用 "),s("code",[t._v("reactive")]),t._v("，以获取对所有属性的响应式侦听能力。")])])])]),t._v(" "),s("h3",{attrs:{id:"对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对比"}},[t._v("#")]),t._v(" 对比")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("ref")]),t._v(" 更适用于单一的、独立的值，或者当你需要在模板中直接使用。")]),t._v(" "),s("li",[s("strong",[t._v("reactive")]),t._v(" 更适用于复杂的、嵌套的对象或数组。")]),t._v(" "),s("li",[t._v("你可以使用 "),s("code",[t._v("toRef")]),t._v(" 和 "),s("code",[t._v("toRefs")]),t._v(" 辅助在 "),s("code",[t._v("ref")]),t._v(" 和 "),s("code",[t._v("reactive")]),t._v(" 之间做相互转换，以适应不同的使用场景。")]),t._v(" "),s("li",[t._v("至于选择 "),s("code",[t._v("ref")]),t._v(" 还是 "),s("code",[t._v("reactive")]),t._v("，取决于具体需求和个人喜好。有些开发者更偏向于只使用 "),s("code",[t._v("ref")]),t._v(" 来管理所有状态（包括对象和数组），因为这样可以保持代码风格的一致性；另一些开发者则会根据场景需要，分别使用 "),s("code",[t._v("ref")]),t._v(" 或 "),s("code",[t._v("reactive")]),t._v("。")])]),t._v(" "),s("h2",{attrs:{id:"vue-3-如何实现组件的懒加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-如何实现组件的懒加载"}},[t._v("#")]),t._v(" Vue 3 如何实现组件的懒加载？")]),t._v(" "),s("p",[s("strong",[t._v("答案：")])]),t._v(" "),s("ul",[s("li",[t._v("可以使用 "),s("code",[t._v("defineAsyncComponent")]),t._v(" 方法来返回一个异步组件。")]),t._v(" "),s("li",[t._v("在路由配置中，也能直接使用动态 "),s("code",[t._v("import")]),t._v(" 语法 ("),s("code",[t._v("() => import('./YourComponent.vue')")]),t._v(") 来实现按需加载。")])]),t._v(" "),s("h3",{attrs:{id:"使用-defineasynccomponent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-defineasynccomponent"}},[t._v("#")]),t._v(" 使用 "),s("code",[t._v("defineAsyncComponent")])]),t._v(" "),s("p",[t._v("当我们不需要整个组件立即加载时，可以将其变为异步组件，示例如下：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" defineAsyncComponent "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" AsyncComp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineAsyncComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./AsyncComp.vue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("components")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    AsyncComp\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"在路由配置中使用懒加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在路由配置中使用懒加载"}},[t._v("#")]),t._v(" 在路由配置中使用懒加载")]),t._v(" "),s("p",[t._v("如果使用的是 "),s("code",[t._v("vue-router")]),t._v("，则可以在路由配置中通过动态 "),s("code",[t._v("import")]),t._v(" 的形式实现懒加载组件：")]),t._v(" "),s("div",{staticClass:"language-javaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createRouter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" createWebHistory "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue-router'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" routes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/about'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'About'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@/views/About.vue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 懒加载")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" router "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRouter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("history")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWebHistory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  routes\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" router\n\n")])])]),s("h2",{attrs:{id:"setup-函数在组件生命周期的哪个阶段执行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setup-函数在组件生命周期的哪个阶段执行"}},[t._v("#")]),t._v(" "),s("code",[t._v("setup")]),t._v(" 函数在组件生命周期的哪个阶段执行？")]),t._v(" "),s("p",[s("strong",[t._v("回答：")]),s("br"),t._v("\n在 Vue 3 中，"),s("code",[t._v("setup")]),t._v(" 函数是在组件实例化时、在生命周期钩子 "),s("code",[t._v("beforeCreate")]),t._v(" 和 "),s("code",[t._v("created")]),t._v(" 之间执行的。这意味着当 "),s("code",[t._v("setup")]),t._v(" 函数执行时，组件实例已经被创建，但还没有进行相应的初始化操作（例如，依赖注入、数据监听等其他生命周期逻辑）。")]),t._v(" "),s("p",[t._v("以下是相对完整的执行顺序示例，可以帮助理解 "),s("code",[t._v("setup")]),t._v(" 函数的大致阶段：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("组件实例创建。")])]),t._v(" "),s("li",[s("strong",[s("code",[t._v("beforeCreate")]),t._v(" 生命周前钩子调用")]),t._v("（如果定义了该钩子）。")]),t._v(" "),s("li",[s("strong",[t._v("执行 "),s("code",[t._v("setup")]),t._v(" 函数。")]),t._v(" "),s("ul",[s("li",[t._v("在这个阶段，可以进行数据的定义、计算属性与侦听器等逻辑的设置。")])])]),t._v(" "),s("li",[s("strong",[s("code",[t._v("created")]),t._v(" 生命周期钩子调用。")])]),t._v(" "),s("li",[s("strong",[t._v("进行数据侦听和相关 DOM 操作。")])]),t._v(" "),s("li",[t._v("**其他生命周期钩子（"),s("strong",[t._v("例如 "),s("code",[t._v("beforeMount")]),t._v(", "),s("code",[t._v("mounted")]),t._v(", "),s("code",[t._v("beforeUpdate")]),t._v(", "),s("code",[t._v("updated")]),t._v(", "),s("code",[t._v("beforeUnmount")]),t._v(", "),s("code",[t._v("unmounted")]),t._v(" 等）依次执行。")])])]),t._v(" "),s("p",[t._v("因此，"),s("code",[t._v("setup")]),t._v(" 函数扮演了一个在组件初始化阶段非常关键的入口角色，这体现在以下几个方面：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("代码组织：")]),t._v(" 可以把与当前组件相关的逻辑集中在一个函数中管理，避免了逻辑分散在各个生命周期钩子之中。")]),t._v(" "),s("li",[s("strong",[t._v("可组合性：")]),t._v(" 由于在 "),s("code",[t._v("setup")]),t._v(" 函数中可以使用 Vue 3 提供的 Composition API（如 "),s("code",[t._v("ref")]),t._v(", "),s("code",[t._v("reactive")]),t._v(", "),s("code",[t._v("computed")]),t._v(", "),s("code",[t._v("watch")]),t._v(" 等），更容易进行逻辑拆分与重用。")]),t._v(" "),s("li",[s("strong",[t._v("一致性：")]),t._v(" 对比传统的生命周期钩子（例如 "),s("code",[t._v("data")]),t._v(", "),s("code",[t._v("methods")]),t._v(", "),s("code",[t._v("created")]),t._v(" 等），"),s("code",[t._v("setup")]),t._v(" 函数提供了一种更统一的写法，并且在逻辑复用和代码可读性方面都有更高的灵活度。")])]),t._v(" "),s("h2",{attrs:{id:"vue-3-中的-emit-是如何实现的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-中的-emit-是如何实现的"}},[t._v("#")]),t._v(" Vue 3 中的 "),s("code",[t._v("emit")]),t._v(" 是如何实现的？")]),t._v(" "),s("p",[t._v("在 Vue 3 中，“事件发射”（emit）机制相较于 Vue 2 有一些演进。总体来说，"),s("code",[t._v("emit")]),t._v(" 用于在子组件中触发事件，从而让父组件或外层组件进行监听和处理。下面从 "),s("strong",[t._v("Composition API")]),t._v(" 和 "),s("strong",[t._v("Options API")]),t._v(" 两个角度来介绍其使用与原理。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"一、composition-api-中的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、composition-api-中的实现"}},[t._v("#")]),t._v(" 一、Composition API 中的实现")]),t._v(" "),s("h4",{attrs:{id:"_1-defineemits-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-defineemits-函数"}},[t._v("#")]),t._v(" 1. "),s("code",[t._v("defineEmits")]),t._v(" 函数")]),t._v(" "),s("p",[t._v("在 "),s("strong",[t._v("Composition API")]),t._v(" 中，Vue 提供了一个内置的辅助函数 "),s("code",[t._v("defineEmits")]),t._v("，用于声明当前组件内可能触发的事件。它会返回一个可用于触发事件的函数。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script setup"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" defineEmits "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义当前组件可能触发的事件列表")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" emit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineEmits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'submit'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cancel'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发事件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onSubmit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// emit('事件名', ...参数)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'submit'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("msg")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Form Submitted'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onCancel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cancel'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button @click"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"onSubmit"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("提交"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button @click"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"onCancel"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("取消"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("ul",[s("li",[t._v("事件声明： 通过 "),s("code",[t._v("defineEmits(['submit', 'cancel'])")]),t._v(" 声明了本组件会触发的事件类型，方便在使用时做类型检查（在 TypeScript 或 IDE 中也能有更好提示）。")]),t._v(" "),s("li",[t._v("事件触发： 返回的"),s("code",[t._v("emit")]),t._v("函数可接受事件名和附加参数，然后"),s("code",[t._v("Vue")]),t._v("会将事件抛到父组件或外层组件进行监听。")])]),t._v(" "),s("h4",{attrs:{id:"_2-父组件监听"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-父组件监听"}},[t._v("#")]),t._v(" 2. 父组件监听")]),t._v(" "),s("p",[t._v("在父组件或外层组件中，我们只需使用常规的 v-on 监听机制即可：")]),t._v(" "),s("div",{staticClass:"language-javaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ChildComponent @submit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"handleSubmit"')]),t._v(" @cancel"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"handleCancel"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script setup"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleSubmit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("payload")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'提交事件触发，参数：'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" payload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleCancel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'取消事件触发'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),s("p",[t._v("Vue 在内部会将子组件触发的事件与父组件监听的回调函数一一对应，从而完成子 -> 父的通信流程。")]),t._v(" "),s("h3",{attrs:{id:"options-api-中的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-api-中的实现"}},[t._v("#")]),t._v(" Options API 中的实现")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("Options API")]),t._v("中，依旧可以通过 "),s("code",[t._v("this.$emit")]),t._v(" 的方式来触发事件，"),s("code",[t._v("emits")]),t._v(" 选项负责声明合法的事件名：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ChildComponent'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明事件：方便在开发者工具/IDE 中做校验和提示")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("emits")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'submit'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cancel'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("methods")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onSubmit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'submit'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("msg")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Form Submitted'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onCancel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cancel'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("父组件同样使用 "),s("code",[t._v("v-on")]),t._v(" 语法或简写 "),s("code",[t._v("@")]),t._v(" 来监听事件：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ChildComponent @submit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"handleSubmit"')]),t._v(" @cancel"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"handleCancel"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("methods")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleSubmit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("payload")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'提交事件触发，参数：'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" payload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleCancel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'取消事件触发'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"三、底层原理-简要"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、底层原理-简要"}},[t._v("#")]),t._v(" 三、底层原理（简要）")]),t._v(" "),s("ul",[s("li",[t._v("事件注册： 当父组件在模板中使用 "),s("code",[t._v("v-on")]),t._v("（或"),s("code",[t._v("@")]),t._v("）指令监听事件时，"),s("code",[t._v("Vue")]),t._v("会将该事件名与回调函数记录在父组件的实例上。")]),t._v(" "),s("li",[t._v("事件触发： 当子组件调用 "),s("code",[t._v("emit（")]),t._v("Composition API）或 "),s("code",[t._v("this.$emit")]),t._v("（Options API）时，Vue 内部会通过查找父组件所注册的事件列表，依次调用对应的回调函数。")]),t._v(" "),s("li",[t._v("类型检查（可选）： 在声明 "),s("code",[t._v("emits")]),t._v(" 时，如果使用了 "),s("code",[t._v("TypeScript")]),t._v("或在 "),s("code",[t._v("ID")]),t._v("E 中开启了相应校验，"),s("code",[t._v("Vue")]),t._v("会根据声明的事件名进行检查，以防止拼写错误或误用。")])]),t._v(" "),s("blockquote",[s("p",[t._v("注意： Vue 3 的事件系统仅作用于父子组件之间，并不再建议跨多层级组件或兄弟组件之间使用“事件总线”方式进行通信，这些场景建议使用 Pinia 或类似的状态管理解决方案。")])]),t._v(" "),s("h3",{attrs:{id:"四、总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、总结"}},[t._v("#")]),t._v(" 四、总结")]),t._v(" "),s("ul",[s("li",[t._v("Composition API： 使用 defineEmits 声明可触发的事件列表，调用返回的 emit 函数触发事件。")]),t._v(" "),s("li",[t._v("Options API： 使用 emits 选项声明可触发的事件列表，通过 this.$emit 发射事件。")]),t._v(" "),s("li",[t._v("统一监听： 父组件中使用 v-on 或 @ 绑定事件监听。")])]),t._v(" "),s("h2",{attrs:{id:"vue-3-的编译器和运行时是如何分离的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-的编译器和运行时是如何分离的"}},[t._v("#")]),t._v(" Vue 3 的编译器和运行时是如何分离的？")]),t._v(" "),s("p",[t._v("在 Vue 3 中，编译器（Compiler）和运行时（Runtime）被拆分成两个独立的部分，分别负责不同的工作内容，从而达到更灵活、更高效的目的。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"编译器-compiler"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编译器-compiler"}},[t._v("#")]),t._v(" 编译器（Compiler）")]),t._v(" "),s("p",[t._v("编译器的职责是将 Vue 组件的模板转为渲染函数（render functions）。这通常会在构建阶段完成，例如，在使用 Vue CLI、Webpack 或其它构建工具进行项目构建时，会通过编译器把 "),s("code",[t._v(".vue")]),t._v(" 文件里的模板编译成对应的渲染函数。")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("用途：")])]),t._v(" "),s("ul",[s("li",[t._v("将模板转换成渲染函数。")]),t._v(" "),s("li",[t._v("对模板进行一些语法级的优化和转换。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("优势：")])]),t._v(" "),s("ul",[s("li",[t._v("在构建阶段即可抹平模板层面的一些兼容性或预处理问题，减少浏览器运行时的负担。")]),t._v(" "),s("li",[t._v("可以更灵活地扩展，比如支持 JSX、Pug 等自定义语法或预处理器。")])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"运行时-runtime"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行时-runtime"}},[t._v("#")]),t._v(" 运行时（Runtime）")]),t._v(" "),s("p",[t._v("运行时是一个更小、纯逻辑层的核心包，主要管理 Vue 组件的生命周期、数据响应式，以及 DOM 操作等。由于它不包含模板编译，所以体积更小、性能更优，适合在生产环境中使用。")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("核心功能：")])]),t._v(" "),s("ul",[s("li",[t._v("提供响应式 API，用于管理组件状态并跟踪数据变化。")]),t._v(" "),s("li",[t._v("负责将数据和渲染函数挂钩，并处理实际 DOM 更新等操作。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("优势：")])]),t._v(" "),s("ul",[s("li",[t._v("由于不包含编译器部分，代码体积更小、加载速度更快。")]),t._v(" "),s("li",[t._v("能在运行时更专注地进行渲染和更新逻辑。")])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"分离的好处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分离的好处"}},[t._v("#")]),t._v(" 分离的好处")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("体积优化：")])]),t._v(" "),s("ul",[s("li",[t._v("运行时本身不包含编译器，可显著降低打包后的文件大小，提升加载与执行速度。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("灵活性增强：")])]),t._v(" "),s("ul",[s("li",[t._v("在需要时，可以单独使用 JSX 或者其他编译方案来处理组件模板，编译工作在构建阶段完成。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("自定义场景：")])]),t._v(" "),s("ul",[s("li",[t._v("Vue 提供多种发布形式，比如带有完整编译功能的版本（"),s("code",[t._v("Runtime + Compiler")]),t._v("），以及仅有运行时核心逻辑的版本（"),s("code",[t._v("Runtime-only")]),t._v("），可以根据项目需求做出选择。")])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[t._v("#")]),t._v(" 使用场景")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("完整版（Runtime + Compiler）：")]),s("br"),t._v("\n如果需要在 "),s("strong",[t._v("运行时动态编译")]),t._v("模板（例如使用 "),s("code",[t._v("inline-template")]),t._v(" 或在浏览器中直接使用 "),s("code",[t._v('<script src="...">')]),t._v(" 方式加载），则需要在生产环境里包含编译器，使用完整版 Vue。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("运行时（Runtime-only）：")]),s("br"),t._v("\n如果你的模板在"),s("strong",[t._v("构建阶段")]),t._v("就已经编译完毕（常见于大多数基于构建工具的 Vue 项目），那么在生产环境只需要更小的运行时版本即可，借此提升性能并减少包体积。")])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("编译器")]),t._v("负责将模板转换为渲染函数，通常在项目构建阶段执行，并可对模板做各种优化。")]),t._v(" "),s("li",[s("strong",[t._v("运行时")]),t._v("则是基于渲染函数进行响应式管理和 DOM 操作的核心，不包含模板编译功能，体积更小、性能更高。")]),t._v(" "),s("li",[t._v("通过分离编译器和运行时，Vue 3 为不同需求（如开发调试 vs. 生产部署）提供了更灵活的选择方案，也能更好地发挥现代构建工具的效率优势。")])]),t._v(" "),s("h3",{attrs:{id:"示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),s("p",[t._v("在项目配置中，可以通过 "),s("strong",[t._v("别名（alias）")]),t._v(" 的方式来选择不同的 Vue 版本：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpack.config.js")]),t._v("\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("alias")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'vue'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue/dist/vue.runtime.esm.js'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用运行时版")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("通过这种方式，"),s("code",[t._v("Vue 3")]),t._v(" 的编译器和运行时实现了更高的可定制性与优化，也满足了不同开发需求和性能要求。")]),t._v(" "),s("h2",{attrs:{id:"vue-3-如何处理异步更新与刷新队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-如何处理异步更新与刷新队列"}},[t._v("#")]),t._v(" Vue 3 如何处理异步更新与刷新队列？")]),t._v(" "),s("p",[t._v("在 Vue 3 中，当我们更新响应式数据时，Vue 不会立即触发 DOM 更新，而是先将所有更新操作推入一个队列，并在 "),s("strong",[t._v("微任务（microtask）")]),t._v(" 阶段统一进行批量处理。这样可以显著提升性能，并确保应用状态的前后一致性。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"为什么需要异步更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要异步更新"}},[t._v("#")]),t._v(" 为什么需要异步更新？")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("性能优化：")]),s("br"),t._v("\n如果同一个组件中的某个字段被多次修改，Vue 会将其“去重”后批量更新 DOM，而不是每次都单独触发 DOM 重绘。这样可以减少不必要的工作量，提升渲染效率。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("一致性：")]),s("br"),t._v("\n当多个响应式数据几乎同时发生变更时，Vue 会将它们一并记录到更新队列中，等到下一次"),s("strong",[t._v("微任务")]),t._v("阶段再进行合并后的单次更新，从而避免在多次更新中出现状态不一致的情况。")])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现原理"}},[t._v("#")]),t._v(" 实现原理")]),t._v(" "),s("p",[t._v("Vue 3 借助了 "),s("strong",[t._v("Promise")]),t._v(" 和 "),s("strong",[t._v("MutationObserver")]),t._v(" 等浏览器原生的异步 API 来调度刷新队列，核心流程如下：")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("收集更新：")]),s("br"),t._v("\n每当 Vue 发现某个组件的响应式数据被修改了，就会将该更新操作放入一个内部的"),s("strong",[t._v("异步更新队列")]),t._v("中。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("微任务时机（microtask）：")]),s("br"),t._v("\nVue 会在微任务队列（"),s("code",[t._v("Promise.then")]),t._v(" 或 "),s("code",[t._v("MutationObserver")]),t._v(" 回调）中集中执行这些更新逻辑。也就是说，多次数据变更会在一次微任务中"),s("strong",[t._v("被合并")]),t._v("处理。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("DOM 更新：")]),s("br"),t._v("\n一旦进入该刷新阶段，Vue 执行队列中的所有更新，并进行必要的 DOM 操作来反映最新状态。这样可以确保渲染过程的"),s("strong",[t._v("批处理")]),t._v("和"),s("strong",[t._v("同步")]),t._v("性。")])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"示例-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例-2"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),s("p",[t._v("下面展示一个计数器的示例，演示 Vue 如何对多次更新进行批量处理。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ref "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("incrementCounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  counter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n  counter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n  counter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("incrementCounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("调用 "),s("code",[t._v("incrementCounter()")]),t._v(" 时，我们对 "),s("code",[t._v("counter")]),t._v(" 连续赋值 "),s("code",[t._v("3")]),t._v("次。")]),t._v(" "),s("li",[s("code",[t._v("Vue")]),t._v(" 并不会立即进行 "),s("code",[t._v("3")]),t._v("次 "),s("code",[t._v("DOM")]),t._v("更新，而是将这些修改合并到同一次更新队列中。")]),t._v(" "),s("li",[t._v("最终只触发一次"),s("code",[t._v("DOM")]),t._v(" 更新操作，渲染结果会呈现 "),s("code",[t._v("counter")]),t._v("的最新值（即 3）。")])]),t._v(" "),s("h2",{attrs:{id:"vue-3-的模板是如何编译的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-的模板是如何编译的"}},[t._v("#")]),t._v(" Vue 3 的模板是如何编译的？")]),t._v(" "),s("p",[t._v("在 Vue 3 中，模板编译过程主要涉及以下几个步骤，最终目的是将模板转换为可执行的渲染函数（render function），再由渲染函数生成 Virtual DOM。本文从 "),s("strong",[t._v("解析（Parsing）")]),t._v("、"),s("strong",[t._v("转换（Transform）")]),t._v(" 以及 "),s("strong",[t._v("代码生成（Code Generation）")]),t._v(" 三个阶段进行介绍。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_1-解析-parsing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-解析-parsing"}},[t._v("#")]),t._v(" 1. 解析（Parsing）")]),t._v(" "),s("p",[t._v("编译器首先会解析 "),s("strong",[t._v("HTML 模板字符串")]),t._v("，将其转换成一个抽象语法树（AST, Abstract Syntax Tree）。在这个阶段，编译器会识别出模板中的标签、属性、文本、插值表达式等信息，并将这些信息存储在 AST 节点中。")]),t._v(" "),s("p",[s("strong",[t._v("示例：")]),t._v(" 下面的模板")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{ message }}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("可能被解析为如下结构的 AST（简化示例）：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"tag"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"children"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"interpolation"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"expression"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("ul",[s("li",[s("code",[t._v("tag")]),t._v(" 表示标签名，这里是 "),s("code",[t._v("div")])]),t._v(" "),s("li",[s("code",[t._v("children")]),t._v(" 数组表示该元素子节点的集合")]),t._v(" "),s("li",[s("code",[t._v("type")]),t._v(" 为 "),s("code",[t._v("interpolation")]),t._v(" 的节点表示插值表达式，其内容是对变量 "),s("code",[t._v("message")]),t._v(" 的引用")])]),t._v(" "),s("h3",{attrs:{id:"_2-转换-transform"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-转换-transform"}},[t._v("#")]),t._v(" 2. 转换（Transform）")]),t._v(" "),s("p",[t._v("在生成初步的 AST 后，编译器会对该树结构进行一系列的转换或优化处理，主要包括：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("语法转换")]),t._v(" "),s("p",[t._v("例如，处理指令（如 v-if, v-for, v-on:click 等），将它们转换为更底层的属性或事件侦听逻辑。")])]),t._v(" "),s("li",[s("p",[t._v("标记静态节点")]),t._v(" "),s("p",[t._v("针对不随数据变化的内容（如纯文本、常量属性），编译器会进行标记并缓存，确保运行时不重复渲染，从而提升性能。")])]),t._v(" "),s("li",[s("p",[t._v("插值表达式转换")]),t._v(" "),s("p",[t._v("对插值表达式做相应的 AST 修整，如将 "+t._s(t.message)+" 映射到最终的渲染函数中的具体变量访问。")])])]),t._v(" "),s("p",[t._v("经过转换阶段后，AST 会变得更加“可执行”，并且具备了静态/动态节点等优化信息。")]),t._v(" "),s("h3",{attrs:{id:"_3-代码生成-code-generation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-代码生成-code-generation"}},[t._v("#")]),t._v(" 3. 代码生成（Code Generation）")]),t._v(" "),s("p",[t._v("最后一步是根据转换后的 AST，生成实际的 渲染函数"),s("code",[t._v("（Render Function）")]),t._v(" 或者与之等价的 "),s("code",[t._v("JavaScript")]),t._v(" 代码。简而言之，编译器会将节点信息映射到 "),s("code",[t._v("createVNode、openBlock、createBlock")]),t._v(" 等底层 "),s("code",[t._v("API")]),t._v(" 调用。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("_ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _cache")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("openBlock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBlock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toDisplayString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* TEXT */")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("ul",[s("li",[s("code",[t._v("openBlock")]),t._v(" /"),s("code",[t._v("createBlock")]),t._v("："),s("code",[t._v("Vue")]),t._v(" 在内部使用的块级渲染指令，用于描述创建虚拟节点和管理渲染内容。")]),t._v(" "),s("li",[s("code",[t._v("toDisplayString(_ctx.message)")]),t._v("：对应模板里 "),s("code",[t._v(t._s(t.message))]),t._v("的插值操作。")])]),t._v(" "),s("p",[t._v("编译完成后，"),s("code",[t._v("Vue")]),t._v("运行时会调用这个渲染函数，并结合响应式数据，将虚拟节点转换成真实的 DOM 元素，或者根据数据变化进行差异更新（diff）。")]),t._v(" "),s("h3",{attrs:{id:"总结-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("ul",[s("li",[t._v("解析（Parsing）： 从纯文本模板生成抽象语法树，识别元素、插值及指令等信息。")]),t._v(" "),s("li",[t._v("转换（Transform）： 对 AST 进行规则转换和优化处理，标记静态节点，变换指令写法等。")]),t._v(" "),s("li",[t._v("代码生成（Code Generation）： 将转换后的 AST 输出为可执行的渲染函数（JavaScript 代码），供运行时使用。")])]),t._v(" "),s("h3",{attrs:{id:"额外的编译特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#额外的编译特性"}},[t._v("#")]),t._v(" 额外的编译特性")]),t._v(" "),s("p",[t._v("Vue 3 的编译器还支持多种高级特性，包括：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("指令（Directives）：")]),t._v(" "),s("ul",[s("li",[t._v("内置和自定义的指令（例如 "),s("code",[t._v("v-if")]),t._v(", "),s("code",[t._v("v-for")]),t._v(", "),s("code",[t._v("v-bind")]),t._v(" 等）都会在编译阶段接受特殊处理，并转换成相应的渲染逻辑函数。")])])]),t._v(" "),s("li",[s("strong",[t._v("动态组件的异步使用：")]),t._v(" "),s("ul",[s("li",[t._v("当使用 "),s("code",[t._v("defineAsyncComponent")]),t._v(" 定义一个异步组件时，编译器也会对其进行相应的优化处理，从而更高效地实现按需加载与懒加载。")])])]),t._v(" "),s("li",[s("strong",[t._v("JSX 和模板兼容性：")]),t._v(" "),s("ul",[s("li",[t._v("Vue 3 的编译器在处理模板的同时，也能够兼容 JSX 或自定义模板语法，为开发者提供更灵活的写法选择。")])])])]),t._v(" "),s("p",[t._v("通过以上能力，Vue 3 编译器能够将模板高效地转换成渲染函数，并减轻运行时生成和更新 DOM 的负担。这也是 Vue 应用在性能和易用性方面表现优秀的重要原因之一。")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"vue-3-的-watch-和-watcheffect-有何区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-的-watch-和-watcheffect-有何区别"}},[t._v("#")]),t._v(" Vue 3 的 "),s("code",[t._v("watch")]),t._v(" 和 "),s("code",[t._v("watchEffect")]),t._v(" 有何区别？")]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("watch")]),t._v("：")]),t._v(" 需要明确地指定依赖。只有当指定的响应式变量发生变化时，才会触发回调。")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("watchEffect")]),t._v("：")]),t._v(" 会"),s("strong",[t._v("自动收集")]),t._v("依赖。只要在回调函数内用到的响应式数据发生变化，就会触发回调。无需显式声明监听的目标数据。")])]),t._v(" "),s("h3",{attrs:{id:"vue-3-中-watch-和-watcheffect-使用示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-中-watch-和-watcheffect-使用示例"}},[t._v("#")]),t._v(" Vue 3 中 "),s("code",[t._v("watch")]),t._v(" 和 "),s("code",[t._v("watchEffect")]),t._v(" 使用示例")]),t._v(" "),s("p",[t._v("下面通过两个简单的示例来演示 "),s("code",[t._v("watch")]),t._v(" 与 "),s("code",[t._v("watchEffect")]),t._v(" 在 "),s("strong",[t._v("Composition API")]),t._v(" 中的用法和区别。")]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"_1-watch-示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-watch-示例"}},[t._v("#")]),t._v(" 1. "),s("code",[t._v("watch")]),t._v(" 示例")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("特点：")]),t._v(" 需要显式指定要监听的响应式变量，只有当该变量的值发生变化时，才会执行回调函数。")])]),t._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("watch 示例"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("姓名："),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-model")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("输入的姓名：{{ name }}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("setup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ref"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" watch "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 定义一个响应式变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Alice'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 使用 watch 显式监听该变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("watch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 要监听的目标")]),t._v("\n  name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 变化后的回调")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("newVal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldVal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('name 由 "')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("oldVal"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 变为 "')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("newVal"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h4",{attrs:{id:"watcheffect-示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#watcheffect-示例"}},[t._v("#")]),t._v(" watchEffect 示例")]),t._v(" "),s("blockquote",[s("p",[t._v("特点： 会自动收集在其回调函数内部所使用的响应式数据，当这些数据任意一项改变时，回调会自动运行。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h3"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("watchEffect 示例"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h3"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("计数器："),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button @click"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"count++"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("点击 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script setup"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ref"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" watchEffect "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 定义一个响应式变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. watchEffect 回调中使用了 count")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("watchEffect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("count 当前值：")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"vue-3-是如何实现条件渲染的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-是如何实现条件渲染的"}},[t._v("#")]),t._v(" Vue 3 是如何实现条件渲染的？")]),t._v(" "),s("p",[t._v("Vue 3 中的条件渲染以指令 "),s("code",[t._v("v-if")]),t._v("、"),s("code",[t._v("v-else-if")]),t._v(" 和 "),s("code",[t._v("v-else")]),t._v(" 为代表，用于根据组件内的响应式数据决定是否渲染某些元素。其核心实现包含"),s("strong",[t._v("编译阶段")]),t._v("和"),s("strong",[t._v("运行时")]),t._v("两个部分，下面依次进行介绍。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_1-模板解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-模板解析"}},[t._v("#")]),t._v(" 1. 模板解析")]),t._v(" "),s("p",[t._v("在模板中使用：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-if")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("show"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("This is visible"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("This is not visible"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("编译器会在构建阶段对它进行解析，生成一颗抽象语法树（AST）。在这一步中，Vue 会识别到 v-if 与 v-else，并将它们转换为具有条件表达式的节点信息。")]),t._v(" "),s("h3",{attrs:{id:"_2-代码生成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-代码生成"}},[t._v("#")]),t._v(" 2. 代码生成")]),t._v(" "),s("p",[t._v("接着，编译器会将前面生成的"),s("code",[t._v("AST")]),t._v("转换成等效的 渲染函数"),s("code",[t._v("（Render Function）")]),t._v("。对于上面的例子，编译产物（简化示例）大致如下：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" h "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("h")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("show "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This is visible'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This is not visible'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("说明：")]),t._v(" "),s("p",[t._v("this.show 是条件表达式的核心，通过它来判断哪些节点应该被渲染。")]),t._v(" "),s("p",[t._v("h 函数用于创建虚拟节点（VNode）。")]),t._v(" "),s("h3",{attrs:{id:"_3-运行时"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-运行时"}},[t._v("#")]),t._v(" 3. 运行时")]),t._v(" "),s("p",[t._v("在运行时，当组件初始化或数据发生变更时，Vue 会执行渲染函数，并根据 this.show 的真值或假值来决定渲染哪个元素——要么渲染 “This is visible”，要么渲染 “This is not visible”。")]),t._v(" "),s("h3",{attrs:{id:"_4-virtual-dom-和真实-dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-virtual-dom-和真实-dom"}},[t._v("#")]),t._v(" 4. Virtual DOM 和真实 DOM")]),t._v(" "),s("p",[t._v("Vue 会将渲染函数返回的 虚拟 "),s("code",[t._v("DOM（Virtual DOM）")]),t._v(" 与上一次的虚拟 "),s("code",[t._v("DOM")]),t._v(" 快照进行比较（即 "),s("code",[t._v("diff")]),t._v(" 过程），随后只对变化的部分（节点的添加、删除或替换）执行实际的 DOM 操作。这种方式极大地提升了性能和开发效率。")]),t._v(" "),s("h3",{attrs:{id:"_5-响应式数据触发更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-响应式数据触发更新"}},[t._v("#")]),t._v(" 5. 响应式数据触发更新")]),t._v(" "),s("ul",[s("li",[t._v("当 show 改变时，Vue 的响应式系统会检测到这一变化，并触发视图更新。")]),t._v(" "),s("li",[t._v("渲染函数会在下一个异步刷新阶段被再次调用。")]),t._v(" "),s("li",[t._v("Vue 通过比较新旧的虚拟 DOM，最终决定是否在真实 DOM 中保留或移除对应节点。")])]),t._v(" "),s("h2",{attrs:{id:"vue-3-中的-computed-是如何实现的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-中的-computed-是如何实现的"}},[t._v("#")]),t._v(" Vue 3 中的 "),s("code",[t._v("computed")]),t._v(" 是如何实现的？")]),t._v(" "),s("p",[t._v("在 Vue 3 中，"),s("code",[t._v("computed")]),t._v(" 依赖"),s("strong",[t._v("惰性求值")]),t._v("的机制来做计算与缓存。当你访问一个计算属性时，Vue 会执行与该计算属性相关的函数，并记录所有被访问的响应式依赖（例如其它响应式变量）。当这些依赖的值发生变化时，才会触发计算属性再次求值并更新结果。否则，每次访问同一个计算属性时，Vue 都会直接返回上一次计算结果，而不需要再次执行计算逻辑，从而实现"),s("strong",[t._v("高效缓存")]),t._v("。")]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("computed")]),t._v(" 的核心")]),t._v("：\n"),s("ol",[s("li",[s("strong",[t._v("依赖追踪")]),t._v("：在计算属性函数执行时，会收集依赖。")]),t._v(" "),s("li",[s("strong",[t._v("惰性求值")]),t._v("：只有在依赖变更时，才重新计算该属性；如果依赖没有变化，则直接返回缓存值。")]),t._v(" "),s("li",[s("strong",[t._v("基于 Proxy API")]),t._v("：Vue 3 内部采用 Proxy 拦截器来追踪依赖并触发更新。")])])])]),t._v(" "),s("p",[t._v("这种基于缓存的机制，使得在访问计算属性时，不必重复执行相对昂贵的计算逻辑，并且能与响应式系统无缝对接。")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"如何理解-vue-3-中的-ssr-服务端渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何理解-vue-3-中的-ssr-服务端渲染"}},[t._v("#")]),t._v(" 如何理解 Vue 3 中的 SSR（服务端渲染）？")]),t._v(" "),s("p",[t._v("Vue 3 提供了对 "),s("strong",[t._v("SSR（Server-Side Rendering）")]),t._v(" 的一流支持，包括异步组件、数据预取等功能。在服务器端渲染过程中，Vue 会在服务器环境中将组件渲染成 HTML 字符串，然后将该字符串发送给客户端，客户端在接收后再进行"),s("strong",[t._v("同构激活")]),t._v("（Hydration），使得在首屏就能呈现完整的内容，同时保留 Vue 的响应式特性。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("主要优点：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("SEO 友好")]),t._v("：对于搜索引擎更友善，爬虫能直接抓取渲染后的 HTML。")]),t._v(" "),s("li",[s("strong",[t._v("首屏更快")]),t._v("：用户能在第一时间看到已经渲染好的内容。")]),t._v(" "),s("li",[s("strong",[t._v("同构激活")]),t._v("：在客户端接管后，可以继续使用 Vue 的完整特性（如响应式更新、组件化逻辑）。")])])])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"vue-3-的-nexttick-是如何实现的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-的-nexttick-是如何实现的"}},[t._v("#")]),t._v(" Vue 3 的 "),s("code",[t._v("nextTick")]),t._v(" 是如何实现的？")]),t._v(" "),s("p",[t._v("在 Vue 3 中，"),s("code",[t._v("nextTick")]),t._v(" 用于延迟执行一段代码，直到下一次 DOM 更新结束。通常在组件数据更新后，如果你想在更新完成后操作 DOM 或获取更新后的界面状态，就需要使用 "),s("code",[t._v("nextTick")]),t._v("。其底层实现通常会利用 "),s("strong",[t._v("JavaScript 的微任务（microtask）队列")]),t._v("（在浏览器环境下，可以是 "),s("code",[t._v("Promise.then")]),t._v(" 或 "),s("code",[t._v("MutationObserver")]),t._v(" 等），也可能回退到更低级的宏任务（如 "),s("code",[t._v("setImmediate")]),t._v("）以保证兼容性。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("执行流程：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("数据更新进入队列")]),t._v("：当组件的响应式数据被修改后，Vue 会先把这些更新放入一个内部队列。")]),t._v(" "),s("li",[s("strong",[t._v("微任务调度")]),t._v("：Vue 通过 "),s("code",[t._v("Promise.then")]),t._v(" 或 "),s("code",[t._v("MutationObserver")]),t._v(" 回调，在微任务阶段统一执行这些更新，并完成对 DOM 的重绘。")]),t._v(" "),s("li",[s("strong",[t._v("调用 "),s("code",[t._v("nextTick")]),t._v(" 回调")]),t._v("：在 DOM 更新完成后，Vue 才执行 "),s("code",[t._v("nextTick")]),t._v(" 注册的回调函数，保证此时我们操作或读取的是真正更新过的 DOM。")])])])]),t._v(" "),s("p",[t._v("这样就确保了在一次事件循环结束后，DOM 已经和新的数据状态保持同步，从而能够安全地进行后续的操作。")]),t._v(" "),s("h2",{attrs:{id:"vue-3-中的-shallowreactive-和-shallowref-有何区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-中的-shallowreactive-和-shallowref-有何区别"}},[t._v("#")]),t._v(" Vue 3 中的 "),s("code",[t._v("shallowReactive")]),t._v(" 和 "),s("code",[t._v("shallowRef")]),t._v(" 有何区别？")]),t._v(" "),s("p",[s("strong",[t._v("答：")]),s("br"),t._v("\n这两个 API 用于创建浅层响应式对象或引用，仅追踪"),s("strong",[t._v("第一层")]),t._v("属性的变更，而不深入到更深层次的嵌套对象中进行响应式转换。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_1-shallowreactive-的用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-shallowreactive-的用法"}},[t._v("#")]),t._v(" 1. "),s("code",[t._v("shallowReactive")]),t._v(" 的用法")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" shallowReactive "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" shallow "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shallowReactive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("b")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nshallow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里不会触发深层的响应式更新")]),t._v("\n")])])]),s("h4",{attrs:{id:"特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" "),s("code",[t._v("特点")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("仅对 shallow 对象的第一层属性进行响应式追踪（如 a 本身的改变）。")])]),t._v(" "),s("li",[s("p",[t._v("当 shallow.a 被替换时，才会触发响应式更新；但 a.b 等更深层次的属性变更不会被追踪。")])]),t._v(" "),s("li",[s("p",[t._v("适用于对嵌套结构内部变化不关心、或者仅需要优化性能的场景。")])])]),t._v(" "),s("h3",{attrs:{id:"_2-shallowref-的用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-shallowref-的用法"}},[t._v("#")]),t._v(" 2. "),s("code",[t._v("shallowRef")]),t._v(" 的用法")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" shallowRef "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sRef "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shallowRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("b")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 同样不会触发深层次的响应式更新")]),t._v("\n\n")])])]),s("h4",{attrs:{id:"特点-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特点-2"}},[t._v("#")]),t._v(" "),s("code",[t._v("特点")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("与 shallowReactive 类似，shallowRef 仅追踪第一层的数据变更（即对 sRef.value 的直接替换）。")]),t._v(" "),s("li",[t._v("访问/修改时需通过 .value 属性，不会自动进行“解包”（unwrapping）。")]),t._v(" "),s("li",[t._v("适用于只关心单一数据引用层面的更新，而不希望对深层次属性做响应式跟踪。")])]),t._v(" "),s("h3",{attrs:{id:"_3-适用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-适用场景"}},[t._v("#")]),t._v(" 3. 适用场景")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("性能优化：")]),t._v(" "),s("ul",[s("li",[t._v("当嵌套层次较为深时，shallow 系列 API 可以避免对所有层次进行深度监听，从而降低开销。")]),t._v(" "),s("li",[t._v("如果数据结构的深层部分不需要任何响应式追踪，这种方式会显著减少不必要的依赖收集。")])])]),t._v(" "),s("li",[s("p",[t._v("特定需求：")]),t._v(" "),s("ul",[s("li",[t._v("如果在项目中有一些只关注第一层变化的场景（例如仅关心某个对象本身被替换，而不关心其内部属性的改变），则 shallowReactive 或 shallowRef 会非常合适。")])])])]),t._v(" "),s("h3",{attrs:{id:"_4-对比-reactive-ref"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-对比-reactive-ref"}},[t._v("#")]),t._v(" 4. 对比 reactive / ref")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("reactive 与 ref：")]),t._v(" "),s("ul",[s("li",[t._v("会对对象的内部属性进行深层次的 Proxy 拦截，因此当深层属性发生变化时，也能触发响应式更新。")])])]),t._v(" "),s("li",[s("p",[t._v("shallowReactive / shallowRef：")]),t._v(" "),s("ul",[s("li",[t._v("只追踪引用的第一层属性变动，深层属性不会被转换为响应式。")])])])]),t._v(" "),s("h2",{attrs:{id:"vue-3-中的-transition-组件是如何工作的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-中的-transition-组件是如何工作的"}},[t._v("#")]),t._v(" Vue 3 中的 "),s("code",[t._v("Transition")]),t._v(" 组件是如何工作的？")]),t._v(" "),s("p",[s("code",[t._v("Transition")]),t._v(" 组件可以用来为元素或组件在"),s("strong",[t._v("插入")]),t._v("和"),s("strong",[t._v("移除")]),t._v("时添加过渡效果。它既能利用纯 CSS 来处理动画，也可以结合 JavaScript 钩子函数实现更加灵活的自定义逻辑。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_1-基本原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本原理"}},[t._v("#")]),t._v(" 1. 基本原理")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("指令条件控制：")])]),t._v(" "),s("ul",[s("li",[t._v("常见用法是将 "),s("code",[t._v("Transition")]),t._v(" 组件包裹在带有 "),s("code",[t._v("v-if")]),t._v("、"),s("code",[t._v("v-show")]),t._v(" 或动态组件的元素外层，当这些元素的显示状态发生变化时，触发进入（enter）或离开（leave）过渡过程。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("阶段类名：")])]),t._v(" "),s("ul",[s("li",[t._v("在不同的进入/离开阶段，"),s("code",[t._v("Transition")]),t._v(" 组件会自动向元素添加或移除一些特定的类名（如 "),s("code",[t._v("v-enter-active")]),t._v(", "),s("code",[t._v("v-enter-from")]),t._v(", "),s("code",[t._v("v-enter-to")]),t._v(", "),s("code",[t._v("v-leave-active")]),t._v(", "),s("code",[t._v("v-leave-from")]),t._v(", "),s("code",[t._v("v-leave-to")]),t._v(" 等）。")]),t._v(" "),s("li",[t._v("默认类名会带有 “v-” 前缀，但也可以通过 "),s("code",[t._v("name")]),t._v(" 属性进行自定义。")])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_2-css-过渡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-css-过渡"}},[t._v("#")]),t._v(" 2. CSS 过渡")]),t._v(" "),s("p",[t._v("当使用 "),s("strong",[t._v("CSS")]),t._v(" 实现过渡时，可以在相应的类名中写入过渡属性。例如：")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".v-enter-active,\n.v-leave-active")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" opacity 1s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".v-enter-from,\n.v-leave-to")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("opacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"javascript-钩子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-钩子"}},[t._v("#")]),t._v(" JavaScript 钩子")]),t._v(" "),s("p",[t._v("如果需要对过渡进行更精细的控制，或者想在动画执行的过程中写一些业务逻辑（例如在动画结束后发送请求等），可以使用 JS 钩子函数：")]),t._v(" "),s("ul",[s("li",[t._v("before-enter: 动画开始前调用")]),t._v(" "),s("li",[t._v("enter: 动画开始时调用")]),t._v(" "),s("li",[t._v("after-enter: 动画结束后调用\n"),s("ul",[s("li",[t._v("对应离场同理：before-leave, leave, after-leave）")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Transition\n    @before"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("enter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"beforeEnter"')]),t._v("\n    @enter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"enter"')]),t._v("\n    @after"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("enter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"afterEnter"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"show"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Hello Vue "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" Transition"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Transition"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script setup"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ref "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" show "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeEnter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'动画开始前'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("enter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" done")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'动画开始'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以在这里使用 JavaScript 操作 DOM 或者通过第三方库做动画")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 需要在动画结束后手动调用 done()")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("done")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterEnter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'动画结束'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),s("ul",[s("li",[t._v("当 show 从 false -> true 转变时，元素会被插入，并触发 enter 系列的钩子。")]),t._v(" "),s("li",[t._v("若从 true -> false，则会触发离场动画的 leave 系列钩子。")])]),t._v(" "),s("h3",{attrs:{id:"核心流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心流程"}},[t._v("#")]),t._v(" 核心流程")]),t._v(" "),s("ul",[s("li",[t._v("判断元素的显示/隐藏：依赖 v-if、v-show 或动态组件等方式切换状态。")]),t._v(" "),s("li",[t._v("生成过渡阶段的类名：Vue 根据过渡的不同阶段自动在元素上应用对应的 CSS 类名。")]),t._v(" "),s("li",[t._v("执行过渡：由纯 CSS 或 JavaScript 钩子来决定动画细节。")]),t._v(" "),s("li",[t._v("移除过渡类名：在动画结束后，Vue 会移除相关的类名，元素也会处于最终渲染状态。")])]),t._v(" "),s("h3",{attrs:{id:"transition-组件使用示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transition-组件使用示例"}},[t._v("#")]),t._v(" "),s("code",[t._v("Transition")]),t._v(" 组件使用示例")]),t._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@click")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("toggleShow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("切换显示"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Transition")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("fade"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-if")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("visible"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("这里是一段带动画的文本"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("Transition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("setup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ref "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" visible "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toggleShow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  visible"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("visible"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("scoped")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token style"}},[s("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".fade-enter-active, .fade-leave-active")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" opacity 0.5s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".fade-enter-from, .fade-leave-to")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("opacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),s("ul",[s("li",[t._v('通过 name="fade"，Vue 会自动给元素加上 fade-enter-active, fade-leave-active 等类名。')]),t._v(" "),s("li",[t._v("CSS 部分设置了 opacity 的过渡效果，实现淡入淡出动画。")])]),t._v(" "),s("h3",{attrs:{id:"_6-小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-小结"}},[t._v("#")]),t._v(" 6. 小结")]),t._v(" "),s("ul",[s("li",[t._v("Transition 组件专门用于在元素或组件的插入和移除时添加过渡效果。")]),t._v(" "),s("li",[t._v("CSS 过渡：借助自动生成的类名来控制动画属性（如 opacity, transform 等）。")]),t._v(" "),s("li",[t._v("JS 钩子：可在过渡开始前、进行中以及结束后插入自定义逻辑，实现更灵活的动画效果。")]),t._v(" "),s("li",[t._v("常见场景：元素淡入淡出、手风琴展开收起、路由切换动画、弹窗出现/关闭等。")])]),t._v(" "),s("p",[t._v("通过 "),s("code",[t._v("Transition")]),t._v(" 组件，"),s("code",[t._v("Vue 3")]),t._v("能够轻松在视图层中引入动态交互效果，同时保持良好的代码结构和可维护性。")]),t._v(" "),s("h2",{attrs:{id:"v-model-的双向数据绑定实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-model-的双向数据绑定实现"}},[t._v("#")]),t._v(" # "),s("code",[t._v("v-model")]),t._v(" 的双向数据绑定实现")]),t._v(" "),s("p",[t._v("在 "),s("strong",[t._v("Vue 3")]),t._v(" 中，"),s("code",[t._v("v-model")]),t._v(" 指令用于在视图和数据之间实现双向绑定。其基本原理是为一个控件或组件绑定属性（通常是 "),s("code",[t._v("value")]),t._v("），并同时监听该控件的事件（例如 "),s("code",[t._v("input")]),t._v(" 或自定义事件），从而在视图更新时同步到数据，在数据更新时也能同步到视图。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_1-属性绑定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-属性绑定"}},[t._v("#")]),t._v(" 1. 属性绑定")]),t._v(" "),s("p",[t._v("对于原生的 HTML 元素（如 "),s("code",[t._v("<input>")]),t._v("），使用 "),s("code",[t._v("v-model")]),t._v(" 通常会自动将元素的 "),s("code",[t._v("value")]),t._v(" 属性与数据中的某个变量绑定：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 等价写法一（概念示例） --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("someVar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),s("p",[t._v("一旦组件或元素的 "),s("code",[t._v("value")]),t._v(" 被绑定，当 "),s("code",[t._v("someVar")]),t._v(" "),s("code",[t._v("值发生变化时，Vue")]),t._v(" 会相应更新 "),s("code",[t._v("<input>")]),t._v(" 的输入框内容。")]),t._v(" "),s("h3",{attrs:{id:"_2-事件监听"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-事件监听"}},[t._v("#")]),t._v(" 2. 事件监听")]),t._v(" "),s("p",[t._v("与此同时，"),s("code",[t._v("v-model")]),t._v(" 也会为元素自动注册一个事件监听器，用来在用户与 "),s("code",[t._v("UI")]),t._v(" 交互时将新输入同步回数据。例如，对于 "),s("code",[t._v("<input>")]),t._v("元素，通常监听的是 "),s("code",[t._v("input")]),t._v(" 事件：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 等价写法二（概念示例） --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@input")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("someVar = $event.target.value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\n")])])]),s("p",[t._v("这样，在用户修改输入框内容时，$event.target.value 会被赋值给 someVar，实现从 UI 到数据的同步。")]),t._v(" "),s("h3",{attrs:{id:"_3-组合等价写法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-组合等价写法"}},[t._v("#")]),t._v(" 3. 组合等价写法")]),t._v(" "),s("p",[t._v("因此，"),s("code",[t._v('v-model="someVar"')]),t._v("实际上就相当于以下的组合写法：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"someVar"')]),t._v("\n  @input"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"someVar = $event.target.value"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),s("p",[t._v("当数据发生变化时，输入框的 "),s("code",[t._v("value")]),t._v(" 会更新；当用户修改输入框时，又会通过事件回调更新数据。")]),t._v(" "),s("h3",{attrs:{id:"_4-自定义组件中的v-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-自定义组件中的v-model"}},[t._v("#")]),t._v(" 4. 自定义组件中的"),s("code",[t._v("v-model")])]),t._v(" "),s("p",[t._v("在自定义组件中，"),s("code",[t._v("v-model")]),t._v(" 的作用也类似，但内部使用了以下约定：")]),t._v(" "),s("ul",[s("li",[t._v("Prop 名："),s("code",[t._v("modelValue")])]),t._v(" "),s("li",[t._v("事件名："),s("code",[t._v("update:modelValue")])])]),t._v(" "),s("p",[t._v("也就是说，在自定义组件内部，如果你想让父组件使用 "),s("code",[t._v("v-model")]),t._v("，需要在子组件定义一个 "),s("code",[t._v("props（modelValue）")]),t._v("和一个对应的 事件"),s("code",[t._v("（update:modelValue）")]),t._v("。父组件通过 v-model 来绑定数据时，Vue 会将实际的值以 "),s("code",[t._v("modelValue")]),t._v(" 传入，并监听子组件内部触发的 update:modelValue 事件来实现双向绑定。")]),t._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- ChildComponent.vue --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("modelValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@input")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("$emit('update:modelValue', $event.target.value)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("setup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("modelValue")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),s("p",[t._v("在父组件中：")]),t._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ChildComponent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-model")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("setup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ref "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ChildComponent "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./ChildComponent.vue'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" username "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),s("blockquote",[s("p",[t._v("这里 "),s("code",[t._v("username")]),t._v(" 就相当于我们在原生 "),s("code",[t._v("input")]),t._v(" 上用 v-model 绑定的值。")])]),t._v(" "),s("h3",{attrs:{id:"总结-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结-3"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("属性绑定（往视图）：将内部数据同步到模板，更新 DOM 中的控件状态。")])]),t._v(" "),s("li",[s("p",[t._v("事件监听（往数据）：监听用户输入或其他触发事件，将用户修改后的值写回响应式数据。")])]),t._v(" "),s("li",[s("p",[t._v("自定义组件约定：在自定义组件中使用 v-model 时，应配合 modelValue 和 update:modelValue 事件，以实现父子组件之间的双向数据绑定。")])])]),t._v(" "),s("h2",{attrs:{id:"vue-2-vue-3-父子组件通信方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-2-vue-3-父子组件通信方式"}},[t._v("#")]),t._v(" Vue 2 & Vue 3 父子组件通信方式")]),t._v(" "),s("p",[t._v("在 Vue 框架中，父子组件之间的通信一直是开发中非常常见的需求。无论是 Vue 2 还是 Vue 3，大体上都延续了同样的思路，主要的差异在于 "),s("strong",[t._v("Options API")]),t._v(" 与 "),s("strong",[t._v("Composition API")]),t._v(" 的写法变化，以及个别 API 的名称调整。下面总结常见的几种父子组件通信方法。")]),t._v(" "),s("hr"),t._v(" "),s("h1",{attrs:{id:"_1-props"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-props"}},[t._v("#")]),t._v(" 1. Props")]),t._v(" "),s("p",[s("strong",[t._v("父组件 → 子组件")]),t._v(" 传递数据的最基本方式。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("在父组件中，通过在子组件标签上写属性并绑定相应的值：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 父组件模板 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ChildComponent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":someProp")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("parentData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\n")])])])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\n在子组件中，通过 props 选项（Vue 2 & 3 Options API）或 defineProps（Vue 3 Composition API）来声明接收：\n\n```text\n// 子组件 (Vue 2 / Options API)\nexport default {\n  props: ['someProp']\n}\n\n// 子组件 (Vue 3 / Composition API)\n<script setup>\ndefineProps({\n  someProp: {\n    type: String,\n    required: false\n  }\n})\n<\/script>\n\n")])])]),s("blockquote",[s("p",[t._v("注意：Props 一般是单向数据流，子组件不应直接修改来自父组件的 Prop 值。")])]),t._v(" "),s("h3",{attrs:{id:"_2-events-子组件向父组件发送消息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-events-子组件向父组件发送消息"}},[t._v("#")]),t._v(" 2. Events (子组件向父组件发送消息)")]),t._v(" "),s("p",[s("code",[t._v("子组件 → 父组件")]),t._v(" 传递数据或事件最常见的方式。")]),t._v(" "),s("ul",[s("li",[t._v("Vue 2 中常用 "),s("code",[t._v("$emit")]),t._v("，在子组件内触发事件，父组件用 "),s("code",[t._v("v-on")]),t._v(" ("),s("code",[t._v("@")]),t._v(") 来监听事件：")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 父组件模板 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ChildComponent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@customEvent")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("handleEvent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子组件 (Vue 2 / Options API)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'customEvent'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" eventData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("ul",[s("li",[t._v("Vue 3 Options API 中依然可以通过 this.$emit；而在 Composition API 中使用 defineEmits 或 setup 参数中的 emit")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 父组件模板 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ChildComponent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@customEvent")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("handleEvent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子组件 (Vue 3 / Composition API)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script setup"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" emit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineEmits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'customEvent'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("triggerEvent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'customEvent'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"_3-scoped-slots"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-scoped-slots"}},[t._v("#")]),t._v(" 3. Scoped Slots")]),t._v(" "),s("p",[s("code",[t._v("父组件")]),t._v("可以通过向子组件传递一个插槽"),s("code",[t._v("（slot）")]),t._v("，子组件再将自身的一些数据通过作用域插槽暴露给父组件使用。")]),t._v(" "),s("ul",[s("li",[t._v("在父组件模板中：")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ChildComponent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-slot")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{ slotProps }"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  {{ slotProps.someValue }}\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ChildComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),s("ul",[s("li",[t._v("在子组件中，需要提供相应的插槽内容，并将数据以 "),s("code",[t._v("v-bind")]),t._v("（或 "),s("code",[t._v(":")]),t._v("） 的方式传递给插槽：")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("slot")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":slotProps")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("childData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("slot")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),s("ul",[s("li",[t._v("适用于父组件需要使用到子组件内部的一些数据，却又不希望子组件直接将这些数据写成 Props 或 Emit 出来的场景。")])]),t._v(" "),s("h3",{attrs:{id:"_4-refs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-refs"}},[t._v("#")]),t._v(" 4. Refs")]),t._v(" "),s("p",[s("code",[t._v("父组件")]),t._v("可以使用 "),s("code",[t._v("refs")]),t._v(" 来直接获取子组件的实例，从而调用其公开方法或访问其属性（通常被视为应谨慎使用的方式）。")]),t._v(" "),s("ul",[s("li",[t._v("在父组件模板中：")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ChildComponent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("childRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),s("ul",[s("li",[t._v("在父组件脚本中 (Vue 2 Options API)：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$refs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("someMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("ul",[s("li",[t._v("在 Vue 3 Composition API 中，则通过 "),s("code",[t._v("ref")]),t._v(" 元素选择器或 "),s("code",[t._v("template")]),t._v(" "),s("code",[t._v("ref")]),t._v(" 获取实例：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" onMounted"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ref "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" childRef "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onMounted")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  childRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("someMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("ul",[s("li",[t._v("适用于确有需要直接访问子组件实例方法或属性的情况（例如封装第三方库时）。")])]),t._v(" "),s("h3",{attrs:{id:"_5-provide-inject"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-provide-inject"}},[t._v("#")]),t._v(" 5. Provide / Inject")]),t._v(" "),s("p",[s("code",[t._v("跨多级父子组件")]),t._v("间的数据传递方式。")]),t._v(" "),s("ul",[s("li",[t._v("父组件使用 "),s("code",[t._v("provide")]),t._v("，将某些数据或方法注入到后代组件的上下文：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父组件 (Vue 3 / Composition API)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" provide "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("provide")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sharedValue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'someData'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("ul",[s("li",[t._v("子孙组件使用 inject 直接获取到祖先提供的值：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 任意深度的子组件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" inject "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sharedData "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("inject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sharedValue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("ul",[s("li",[t._v("适合场景：跨多个层级的组件需要共享状态，而又不想频繁地在每层组件之间用 Props/Emit 进行传递。")])]),t._v(" "),s("h3",{attrs:{id:"_6-composition-api-vue-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-composition-api-vue-3"}},[t._v("#")]),t._v(" 6. Composition API (Vue 3)")]),t._v(" "),s("p",[t._v("在 Vue 3 中，如果使用了 Composition API（setup()、reactive、ref、computed、watch 等），父组件与子组件通信依旧可以通过上面几种方式（Props、Emit、Slots 等）。")]),t._v(" "),s("ul",[s("li",[t._v("父组件使用 ref / reactive 保存数据并通过 Props 传递给子组件。")]),t._v(" "),s("li",[t._v("子组件用 emit 或 defineEmits 将事件和数据向外抛出。")]),t._v(" "),s("li",[t._v("同时可结合 Provide/Inject 实现跨层级通信，进一步提升灵活性。")])]),t._v(" "),s("h3",{attrs:{id:"_7-vuex-或-pinia-等状态管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-vuex-或-pinia-等状态管理"}},[t._v("#")]),t._v(" 7. Vuex (或 Pinia 等状态管理)")]),t._v(" "),s("p",[t._v("非父子组件或跨兄弟组件的通信经常使用全局状态管理（如 Vuex 在 Vue 2/3，或 Pinia 在 Vue 3）：")]),t._v(" "),s("p",[t._v("当状态保存在全局 Store 中，任何组件（无论层级）都可以订阅、读取和修改该 Store，从而实现跨组件通信。")]),t._v(" "),s("h3",{attrs:{id:"_8-event-bus-全局事件总线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-event-bus-全局事件总线"}},[t._v("#")]),t._v(" 8. Event Bus / 全局事件总线")]),t._v(" "),s("p",[t._v("在 Vue 2 中，有时会使用 "),s("code",[t._v("Event Bus")]),t._v("（一个空的 "),s("code",[t._v("Vue")]),t._v(" 实例）在无父子关系的组件之间传递事件。")]),t._v(" "),s("ul",[s("li",[t._v("然而，在 Vue 3 中已不再推荐这种方式，官方更倾向使用 依赖注入"),s("code",[t._v("（Provide/Inject）")]),t._v(" 或 "),s("code",[t._v("Pinia/Vuex")]),t._v(" 等模式来管理全局/跨组件的数据共享。")])]),t._v(" "),s("h3",{attrs:{id:"总结-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结-4"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("ul",[s("li",[t._v("父传子：使用 Props。")]),t._v(" "),s("li",[t._v("子传父：使用 事件（Emit / $emit）。")]),t._v(" "),s("li",[t._v("父组件访问子组件实例：使用 Refs。")]),t._v(" "),s("li",[t._v("多层级数据共享：使用 Provide/Inject 或 Vuex / Pinia。")]),t._v(" "),s("li",[t._v("Composition API：在内部逻辑上，仍然依托以上通信方式，只是写法更简洁，且更易做逻辑拆分与重用。")])]),t._v(" "),s("p",[t._v("无论是 Vue 2 还是 Vue 3，核心通信机制都在 Props / Emit / Slots / Provide & Inject 的基础上延伸。Vue 3 更加强调组合式 API，但在父子通信层面并没有完全改变，而是做了针对 TS 类型、逻辑抽离等方面的增强。")]),t._v(" "),s("h2",{attrs:{id:"如何理解-vue-3-中的-provide-和-inject-如何实现的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何理解-vue-3-中的-provide-和-inject-如何实现的"}},[t._v("#")]),t._v(" 如何理解 Vue 3 中的 provide 和 inject？如何实现的？")]),t._v(" "),s("h3",{attrs:{id:"一、理解-provide-和-inject"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、理解-provide-和-inject"}},[t._v("#")]),t._v(" 一、理解 provide 和 inject")]),t._v(" "),s("p",[s("code",[t._v("provide")]),t._v(" 和 "),s("code",[t._v("inject")]),t._v(" 是 Vue 3 提供的依赖注入 API，用于实现"),s("strong",[t._v("父组件与深层嵌套的后代组件")]),t._v("之间的跨层级通信。它们解决了以下问题：")]),t._v(" "),s("ul",[s("li",[t._v("避免逐层手动传递 props")]),t._v(" "),s("li",[t._v("允许任意层级的后代组件直接访问祖先组件提供的数据或方法")])]),t._v(" "),s("h4",{attrs:{id:"核心特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心特性"}},[t._v("#")]),t._v(" 核心特性")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[s("code",[t._v("provide")])]),s("br"),t._v("\n在父组件中定义要提供给后代组件的数据或方法：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 选项式 API")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("provide")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("message")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello from parent'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("updateData")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 更新逻辑 */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组合式 API")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" provide "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("provide")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello from parent'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("inject")])])])]),t._v(" "),s("p",[t._v("在后代组件中声明需要注入的依赖：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 选项式 API")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("inject")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'updateData'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 组合式 API")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" inject "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" msg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("inject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" msg "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"二、实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、实现原理"}},[t._v("#")]),t._v(" 二、实现原理")]),t._v(" "),s("ol",[s("li",[t._v("响应式存储系统")])]),t._v(" "),s("p",[t._v("当调用 provide 时，Vue 会将提供的数据存储在当前组件实例的 provides 对象中")]),t._v(" "),s("p",[t._v("该对象使用原型链继承机制，子组件的 provides 默认指向父组件的 provides")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("依赖查找机制")])]),t._v(" "),s("p",[t._v("组件调用 inject 时，Vue 会从当前组件开始，沿组件树向上查找最近的 provides 对象")]),t._v(" "),s("p",[t._v("查找路径：当前组件 -> 父组件 -> 祖父组件 -> ... -> 根组件")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("响应式绑定")])]),t._v(" "),s("p",[t._v("如果提供的值是 ref 或 reactive 对象，注入的值会保持响应式")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提供响应式数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("provide")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'count'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注入后仍保持响应性")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" injectedCount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("inject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'count'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ninjectedCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发视图更新")]),t._v("\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("Symbol 防冲突")])]),t._v(" "),s("ul",[s("li",[t._v("推荐使用 Symbol 作为注入标识符：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// keys.js")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DATA_KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'unique_data_key'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父组件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("provide")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DATA_KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* data */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子组件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("inject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DATA_KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"vue-3-custom-renderer-api-详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-custom-renderer-api-详解"}},[t._v("#")]),t._v(" Vue 3 Custom Renderer API 详解")]),t._v(" "),s("h3",{attrs:{id:"一、核心概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、核心概念"}},[t._v("#")]),t._v(" 一、核心概念")]),t._v(" "),s("h4",{attrs:{id:"什么是-custom-renderer-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-custom-renderer-api"}},[t._v("#")]),t._v(" 什么是 Custom Renderer API？")]),t._v(" "),s("p",[t._v("Custom Renderer API 是 Vue 3 提供的高级特性，允许开发者"),s("strong",[t._v("创建自定义渲染器")]),t._v("，突破传统 DOM 渲染的限制。通过该 API，可以实现：")]),t._v(" "),s("ul",[s("li",[t._v("非 DOM 环境渲染（Canvas/WebGL/终端界面等）")]),t._v(" "),s("li",[t._v("跨平台应用开发（移动端/桌面端原生组件）")]),t._v(" "),s("li",[t._v("高度定制化的渲染逻辑")])]),t._v(" "),s("h4",{attrs:{id:"与传统渲染方式的对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#与传统渲染方式的对比"}},[t._v("#")]),t._v(" 与传统渲染方式的对比")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("特性")]),t._v(" "),s("th",[t._v("Vue 2 默认渲染")]),t._v(" "),s("th",[t._v("Vue 3 Custom Renderer")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("渲染目标")]),t._v(" "),s("td",[t._v("DOM/SSR")]),t._v(" "),s("td",[t._v("任意目标（Canvas/OpenGL等）")])]),t._v(" "),s("tr",[s("td",[t._v("架构设计")]),t._v(" "),s("td",[t._v("紧耦合 DOM 实现")]),t._v(" "),s("td",[t._v("解耦的核心渲染引擎")])]),t._v(" "),s("tr",[s("td",[t._v("扩展性")]),t._v(" "),s("td",[t._v("有限")]),t._v(" "),s("td",[t._v("高度可扩展")])]),t._v(" "),s("tr",[s("td",[t._v("典型应用场景")]),t._v(" "),s("td",[t._v("Web 页面")]),t._v(" "),s("td",[t._v("游戏/可视化/跨平台应用")])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"二、实现原理-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、实现原理-2"}},[t._v("#")]),t._v(" 二、实现原理")]),t._v(" "),s("h4",{attrs:{id:"渲染器核心方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染器核心方法"}},[t._v("#")]),t._v(" 渲染器核心方法")]),t._v(" "),s("p",[t._v("自定义渲染器需要实现以下基础方法：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" renderer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 创建元素 */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对应 DOM 的 document.createElement")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("patchProp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prevVal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextVal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 更新属性 */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" anchor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 插入元素 */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 删除元素 */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("             \n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createText")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 创建文本节点 */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...其他生命周期方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"创建自定义渲染器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建自定义渲染器"}},[t._v("#")]),t._v(" 创建自定义渲染器")]),t._v(" "),s("p",[t._v("通过 "),s("code",[t._v("createRenderer")]),t._v(" API 生成渲染器实例：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createRenderer "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义 Canvas 渲染逻辑")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" canvasRenderer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRenderer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CanvasElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 自定义 Canvas 元素类")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    parent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parent\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发重绘逻辑")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实现其他必要方法...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建使用该渲染器的 Vue 应用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" app "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" canvasRenderer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createApp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#canvas-container'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 挂载到 Canvas 画布")]),t._v("\n")])])]),s("h2",{attrs:{id:"vue-3-0-的-composition-api-与-vue-2-x-的-options-api-有哪些不同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-0-的-composition-api-与-vue-2-x-的-options-api-有哪些不同"}},[t._v("#")]),t._v(" Vue 3.0 的 Composition API 与 Vue 2.x 的 Options API 有哪些不同？")]),t._v(" "),s("p",[t._v("以下总结了二者在多个方面的差异：")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("组件的代码组织方式")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Composition API")]),t._v("：使用 "),s("code",[t._v("setup")]),t._v(" 函数在同一逻辑块中管理组件的状态和逻辑，方便代码的复用与抽离。")]),t._v(" "),s("li",[s("strong",[t._v("Options API")]),t._v("：在不同的选项区域（如 "),s("code",[t._v("data")]),t._v(", "),s("code",[t._v("methods")]),t._v(", "),s("code",[t._v("computed")]),t._v(", "),s("code",[t._v("watch")]),t._v("）中集中管理各自的功能。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("逻辑复用和封装")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Composition API")]),t._v("：更容易将相同或相似的业务逻辑抽离；无需依赖 mixin 进行复用。")]),t._v(" "),s("li",[s("strong",[t._v("Options API")]),t._v("：通常依赖 mixin 或者在多个选项中分散处理。当项目变得复杂时，逻辑容易分散不易维护。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("类型支持")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Composition API")]),t._v("：由于基于函数式写法，更易与 TypeScript 结合，在类型推断和校验上更友好。")]),t._v(" "),s("li",[s("strong",[t._v("Options API")]),t._v("：在 TypeScript 上也可以使用，但是需要额外的配置和写法，可能不如 Composition API 直观。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("响应式声明")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Composition API")]),t._v("：使用 "),s("code",[t._v("ref")]),t._v(" 和 "),s("code",[t._v("reactive")]),t._v(" 等来创建响应式状态，灵活且直观。")]),t._v(" "),s("li",[s("strong",[t._v("Options API")]),t._v("：在 "),s("code",[t._v("data")]),t._v(" 选项中返回对象或变量来完成响应式。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("生命周期钩子")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Composition API")]),t._v("：在 "),s("code",[t._v("setup")]),t._v(" 中使用对应的生命周期函数（如 "),s("code",[t._v("onMounted")]),t._v(", "),s("code",[t._v("onUpdated")]),t._v(" 等）。")]),t._v(" "),s("li",[s("strong",[t._v("Options API")]),t._v("：在组件中直接定义如 "),s("code",[t._v("mounted")]),t._v(", "),s("code",[t._v("updated")]),t._v(" 等选项来声明钩子。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("模板和方法")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Composition API")]),t._v("：可在 "),s("code",[t._v("setup")]),t._v(" 函数内直接定义和返回各种方法或变量给模板使用。")]),t._v(" "),s("li",[s("strong",[t._v("Options API")]),t._v("：通过在不同选项（如 "),s("code",[t._v("data")]),t._v(", "),s("code",[t._v("computed")]),t._v(", "),s("code",[t._v("methods")]),t._v("）里声明属性或方法，并自动注入到模板上下文。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("数据侦听")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Composition API")]),t._v("：更倾向使用 "),s("code",[t._v("watch")]),t._v(" 和 "),s("code",[t._v("watchEffect")]),t._v("，只要数据依赖发生变化就触发更新。")]),t._v(" "),s("li",[s("strong",[t._v("Options API")]),t._v("：通过 "),s("code",[t._v("watch")]),t._v(" 或者在数据变更的生命周期中执行特定逻辑。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("代码可读性和整洁度")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Composition API")]),t._v("：将相同逻辑封装于同一个函数、同一片段，逻辑相关的代码更紧密。")]),t._v(" "),s("li",[s("strong",[t._v("Options API")]),t._v("：逻辑可能分散在多个选项里，后期维护时，需要在不同选项之间切换查看。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("可测试性和可维护性")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Composition API")]),t._v("：更利于单元测试，因为数据与逻辑更易抽离。")]),t._v(" "),s("li",[s("strong",[t._v("Options API")]),t._v("：测试思路也较为清晰，但当组件逻辑变复杂时，测试难度随之上升。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("迁移和兼容性")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Composition API")]),t._v("：Vue 3 更推荐的模式；但它能与 Options API 并存，项目可循序渐进地升级。")]),t._v(" "),s("li",[s("strong",[t._v("Options API")]),t._v("：在 Vue 3 中依旧得到支持，老项目可继续使用，也可以混合使用新 API。")])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"核心差异概览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心差异概览"}},[t._v("#")]),t._v(" 核心差异概览")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("特性")])]),t._v(" "),s("th",[s("strong",[t._v("Composition API")])]),t._v(" "),s("th",[s("strong",[t._v("Options API")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("代码组织方式")])]),t._v(" "),s("td",[t._v("通过 "),s("code",[t._v("setup")]),t._v(" 函数集中管理状态和逻辑")]),t._v(" "),s("td",[t._v("分散在 "),s("code",[t._v("data")]),t._v(", "),s("code",[t._v("methods")]),t._v(" 等选项中")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("逻辑复用")])]),t._v(" "),s("td",[t._v("直接通过函数提取和复用逻辑")]),t._v(" "),s("td",[t._v("依赖 "),s("code",[t._v("mixin")]),t._v(" 或高阶组件")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("TypeScript 支持")])]),t._v(" "),s("td",[t._v("天然支持，类型推断更完善")]),t._v(" "),s("td",[t._v("需要额外类型声明或装饰器")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("响应式声明")])]),t._v(" "),s("td",[t._v("使用 "),s("code",[t._v("ref")]),t._v("/"),s("code",[t._v("reactive")]),t._v(" 显式声明")]),t._v(" "),s("td",[t._v("在 "),s("code",[t._v("data")]),t._v(" 选项中隐式声明")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("生命周期钩子")])]),t._v(" "),s("td",[t._v("以 "),s("code",[t._v("onMounted")]),t._v("/"),s("code",[t._v("onUpdated")]),t._v(" 函数形式调用")]),t._v(" "),s("td",[t._v("以 "),s("code",[t._v("mounted")]),t._v("/"),s("code",[t._v("updated")]),t._v(" 选项形式定义")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("模板绑定")])]),t._v(" "),s("td",[s("code",[t._v("setup")]),t._v(" 返回的变量和方法直接暴露给模板")]),t._v(" "),s("td",[t._v("需在 "),s("code",[t._v("data")]),t._v("/"),s("code",[t._v("methods")]),t._v(" 中分别定义")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("依赖追踪优化")])]),t._v(" "),s("td",[t._v("仅追踪实际使用的依赖，减少无效更新")]),t._v(" "),s("td",[t._v("可能因隐式依赖导致不必要的重新渲染")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("代码可维护性")])]),t._v(" "),s("td",[t._v("复杂组件逻辑更集中，易于维护")]),t._v(" "),s("td",[t._v("简单组件直观，复杂组件逻辑分散")])])])]),t._v(" "),s("hr"),t._v(" "),s("p",[s("strong",[t._v("总体来说，Vue 3 的 Composition API 提供了更灵活的代码组织方式，增强了与 TypeScript 的结合能力，解决了在大型项目中逻辑分散的问题。在小型或简单项目中，Options API 依然直观易用。Vue 3 支持二者混用，开发者可根据团队习惯和场景选择最佳方案。")])]),t._v(" "),s("h2",{attrs:{id:"vue-3-性能提升主要体现在哪些方面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-性能提升主要体现在哪些方面"}},[t._v("#")]),t._v(" Vue 3 性能提升主要体现在哪些方面？")]),t._v(" "),s("p",[t._v("Vue 3 在保持易用性的同时，对底层架构进行了大量优化，带来了更高的运行效率和更灵活的开发体验。以下是几个主要的性能与功能提升点：")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("响应式系统升级")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Proxy-based")]),t._v(" 响应式：由基于 "),s("code",[t._v("Object.defineProperty")]),t._v(" 的方式切换到基于 "),s("code",[t._v("Proxy")]),t._v("，无需遍历所有属性即可拦截对象操作，更好地支持数组、动态属性等场景，并提供更高的性能。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("编译优化")])]),t._v(" "),s("ul",[s("li",[t._v("通过对模板进行更智能的编译策略，比如对静态节点进行标记和提升，减少 DOM 更新时重复创建虚拟节点，从而降低渲染开销。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Tree-shaking 友好")])]),t._v(" "),s("ul",[s("li",[t._v("Vue 3 的源码在结构上更加模块化，使得打包工具（如 Webpack、Rollup）可以剔除未使用的代码，减小最终产物的体积。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Fragment & Portal")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Fragment")]),t._v(" 允许组件有"),s("strong",[t._v("多个根节点")]),t._v("，减少不必要的包裹元素。")]),t._v(" "),s("li",[s("strong",[t._v("Portal")]),t._v(" 提供了一种将组件内容“传送”到指定 DOM 节点的方法，能够实现更高效的更新和更加灵活的布局。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("更快的 Diff 算法")])]),t._v(" "),s("ul",[s("li",[t._v("Vue 3 的 "),s("strong",[t._v("DOM diff")]),t._v(" 使用 "),s("strong",[t._v("Longest Stable Subsequence")]),t._v(" 算法进行优化，在列表渲染时可以更快速、更准确地找到需要更新的节点位置。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("自定义渲染器 API")])]),t._v(" "),s("ul",[s("li",[t._v("Vue 3 提供更灵活的 "),s("code",[t._v("@vue/runtime-core")]),t._v(" API，可以自定义渲染器（如在小程序环境或原生应用环境中使用），从而优化特定场景下的渲染性能。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Composition API")])]),t._v(" "),s("ul",[s("li",[t._v("除了结构优化，也带来了更高效的逻辑复用方式，相比 mixins 不会产生不必要的“命名冲突”和上下文耦合，从侧面提高代码可维护性和执行效率。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("异步渲染机制")])]),t._v(" "),s("ul",[s("li",[t._v("异步刷新队列与批量更新策略，使得 Vue 在对大量数据进行更新时依旧保持较好的渲染性能。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Suspense 等特性")])]),t._v(" "),s("ul",[s("li",[t._v("Suspense 组件能在处理异步请求或懒加载组件时带来更灵活的管理和更好的用户体验（首屏加载、异步组件等）。")])])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("nextTick")]),t._v(" 优化")])]),t._v(" "),s("ul",[s("li",[t._v("基于微任务（microtask）的实现，使组件更新队列能在事件循环的空隙更快地执行，减少不必要的宏任务开销。")])])])]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("综上所述，Vue 3 的性能提升主要源于"),s("strong",[t._v("响应式系统")]),t._v("的底层改造、"),s("strong",[t._v("编译和 Diff")]),t._v(" 的全面升级、以及对"),s("strong",[t._v("Tree-shaking")]),t._v(" 等打包工具友好的支持。这些优化共同保障了更高的运行速度和更轻的打包体积，也为开发者带来了更丰富的功能特性和更灵活的扩展方式。")]),t._v(" "),s("h2",{attrs:{id:"深入探讨-vue-3-的-dom-diff-原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深入探讨-vue-3-的-dom-diff-原理"}},[t._v("#")]),t._v(" 深入探讨 Vue 3 的 DOM Diff 原理")]),t._v(" "),s("p",[t._v("下面从整体到局部，逐步分析 Vue 3 是如何在视图更新时，通过 "),s("strong",[t._v("虚拟 DOM")]),t._v(" 来进行高效的差异比较（diff），最终只对发生变化的节点进行最小化的真实 DOM 更新。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_1-基本概念-增量式-diff"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本概念-增量式-diff"}},[t._v("#")]),t._v(" 1. 基本概念：增量式 Diff")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("增量式更新")]),t._v("：Vue 会对比"),s("strong",[t._v("新旧")]),t._v("虚拟节点（VNodes），并按照一定策略找到已经改变的部分，然后只对这些部分进行真实 DOM 更新。")]),t._v(" "),s("li",[s("strong",[t._v("虚拟节点")]),t._v("：它是对真实 DOM 的抽象描述，包含了节点类型、属性、事件、子节点等信息。")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("优势")]),t._v("：避免了对整棵 DOM 树进行粗暴的“清空与重绘”，显著提升了性能。")])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"_2-vue-3-中的-diff-过程概览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-vue-3-中的-diff-过程概览"}},[t._v("#")]),t._v(" 2. Vue 3 中的 Diff 过程概览")]),t._v(" "),s("p",[t._v("假设有一组“旧”虚拟节点 "),s("code",[t._v("c1")]),t._v(" 与“新”虚拟节点 "),s("code",[t._v("c2")]),t._v("，Vue 会在渲染更新时执行如下操作（简化示意）：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("从头部开始比较")]),t._v(" "),s("ul",[s("li",[t._v("比较 "),s("code",[t._v("c1")]),t._v(" 与 "),s("code",[t._v("c2")]),t._v(" 当前最前端的节点，如果发现类型相同或 key 相同，则直接 "),s("code",[t._v("patch")]),t._v("，然后各自索引向后移动一位。")])])]),t._v(" "),s("li",[s("strong",[t._v("从尾部开始比较")]),t._v(" "),s("ul",[s("li",[t._v("再比较 "),s("code",[t._v("c1")]),t._v(" 与 "),s("code",[t._v("c2")]),t._v(" 当前最后端的节点，同理进行 "),s("code",[t._v("patch")]),t._v("，然后各自索引向前移动一位。")])])]),t._v(" "),s("li",[s("strong",[t._v("中间部分处理")]),t._v(" "),s("ul",[s("li",[t._v("若首尾都有节点对齐，就会来到中间区域，Vue 会使用较为复杂的算法（基于"),s("strong",[t._v("Longest Stable Subsequence")]),t._v("）来处理"),s("strong",[t._v("乱序")]),t._v("节点，找出节点的最长稳定序列并最小化移动开销。")])])]),t._v(" "),s("li",[s("strong",[t._v("插入或移除")]),t._v(" "),s("ul",[s("li",[t._v("对新列表中"),s("strong",[t._v("多余的节点")]),t._v("或旧列表中"),s("strong",[t._v("缺失的节点")]),t._v("进行插入或删除操作。")])])])]),t._v(" "),s("p",[t._v("该流程可归纳为 Vue 在"),s("strong",[t._v("双指针法")]),t._v("（头尾对比）的基础上，结合 "),s("strong",[t._v("Longest Stable Subsequence")]),t._v(" 提升处理乱序节点的效率。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_3-核心步骤与细节"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-核心步骤与细节"}},[t._v("#")]),t._v(" 3. 核心步骤与细节")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("初始化对比")])]),t._v(" "),s("ul",[s("li",[t._v("假如 "),s("code",[t._v("oldChildren = [a, b, c]")]),t._v("，"),s("code",[t._v("newChildren = [a, d, b, c]")]),t._v("。")]),t._v(" "),s("li",[t._v("Vue 会先从两边开始：\n"),s("ul",[s("li",[t._v("头部："),s("code",[t._v("a")]),t._v(" 与 "),s("code",[t._v("a")]),t._v(" 相同，跳过。")]),t._v(" "),s("li",[t._v("尾部："),s("code",[t._v("c")]),t._v(" 与 "),s("code",[t._v("c")]),t._v(" 相同，跳过。")])])]),t._v(" "),s("li",[t._v("中间部分剩下 "),s("code",[t._v("[b]")]),t._v(" 和 "),s("code",[t._v("[d, b]")]),t._v("。Vue 发现新数组里多了个 "),s("code",[t._v("d")]),t._v("，会插入 "),s("code",[t._v("d")]),t._v("。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Keyed Diff")])]),t._v(" "),s("ul",[s("li",[t._v("当节点带有 "),s("code",[t._v("key")]),t._v(" 属性时，可通过 "),s("code",[t._v("key")]),t._v(" 更快地匹配旧、新节点，减少不必要的移动、创建或删除。")]),t._v(" "),s("li",[t._v("没有 "),s("code",[t._v("key")]),t._v(" 会使用"),s("strong",[t._v("顺序比较")]),t._v("，容易触发全量更新或错误的复用。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("乱序节点处理")])]),t._v(" "),s("ul",[s("li",[t._v("Vue 使用 "),s("strong",[t._v("Longest Stable Subsequence")]),t._v(" 算法（与最长递增子序列思路类似，但适配 Vue 的场景），找出哪些节点可以保留在原位，哪些需要移动、添加或删除，从而最大限度地降低真实 DOM 操作数量。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Patch 过程")])]),t._v(" "),s("ul",[s("li",[t._v("若两个节点相匹配（相同类型、相同 key），则会将它们传递给 "),s("code",[t._v("patch")]),t._v(" 函数，递归对其子节点、属性、事件监听等做更深层次的 diff。")]),t._v(" "),s("li",[t._v("如果发现节点类型完全不同（如从 "),s("code",[t._v("div")]),t._v(" 变为 "),s("code",[t._v("span")]),t._v("），则会卸载旧节点、挂载新节点。")])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_4-diff-算法的示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-diff-算法的示例"}},[t._v("#")]),t._v(" 4. Diff 算法的示例")]),t._v(" "),s("p",[t._v("以一个示例演示核心思想：")]),t._v(" "),s("p",[s("strong",[t._v("旧 VNode 列表：")]),s("br"),t._v("\n[ div(key=1), div(key=2), div(key=3), div(key=4) ]")]),t._v(" "),s("p",[s("strong",[t._v("新 VNode 列表：")])]),t._v(" "),s("p",[t._v("[ div(key=1), div(key=3), div(key=2), div(key=5), div(key=4) ]")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("比较头部")]),t._v("："),s("code",[t._v("key=1")]),t._v(" 对应，跳过。")]),t._v(" "),s("li",[s("strong",[t._v("比较尾部")]),t._v("：旧尾 "),s("code",[t._v("key=4")]),t._v(" 与新尾 "),s("code",[t._v("key=4")]),t._v(" 对应，跳过。")]),t._v(" "),s("li",[s("strong",[t._v("中间部分")]),t._v("：现在剩下 "),s("code",[t._v("[ div(2), div(3) ]")]),t._v(" 和 "),s("code",[t._v("[ div(3), div(2), div(5) ]")]),t._v("。\n"),s("ul",[s("li",[t._v("通过 Keyed Diff，Vue 识别到 "),s("code",[t._v("2")]),t._v(" → "),s("code",[t._v("2")]),t._v("，"),s("code",[t._v("3")]),t._v(" → "),s("code",[t._v("3")]),t._v("，并且发现新列表中多了一个 "),s("code",[t._v("div(5)")]),t._v("。")]),t._v(" "),s("li",[t._v("Vue 会插入 "),s("code",[t._v("div(5)")]),t._v(" 到对应位置，并按照最小移动量把 "),s("code",[t._v("key=2")]),t._v(" 移到正确位置（若顺序有变）。")])])]),t._v(" "),s("li",[t._v("最终，DOM 只做一次插入，并有可能做一次移动操作，实现增量更新。")])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"_5-关键优化-longest-stable-subsequence"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-关键优化-longest-stable-subsequence"}},[t._v("#")]),t._v(" 5. 关键优化：Longest Stable Subsequence")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("核心思路")]),t._v("：在对比中间乱序部分时，不必逐个对比匹配，而是先用 "),s("code",[t._v("key")]),t._v(" 建立映射关系，再通过 "),s("strong",[t._v("Longest Stable Subsequence")]),t._v(" 计算出可保留的节点序列。")]),t._v(" "),s("li",[s("strong",[t._v("意义")]),t._v("：\n"),s("ul",[s("li",[t._v("只需移动不在最大稳定序列中的节点，避免过多的插入/删除操作。")]),t._v(" "),s("li",[t._v("大大减少了 DOM 操作次数，从而提高性能。")])])])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"_6-最终渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-最终渲染"}},[t._v("#")]),t._v(" 6. 最终渲染")]),t._v(" "),s("ul",[s("li",[t._v("当 Diff 过程确定了需要更新的节点及其对应位置后，Vue 会对旧节点做卸载处理（如果需要），再进行挂载或移动新节点，最终更新 DOM 状态使之与最新的虚拟节点树保持一致。")])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"_7-小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-小结"}},[t._v("#")]),t._v(" 7. 小结")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("Vue 3 Diff")]),t._v(" 是在 "),s("strong",[t._v("双指针")]),t._v(" + "),s("strong",[t._v("Longest Stable Subsequence")]),t._v(" 基础上进行的优化。")]),t._v(" "),s("li",[s("strong",[t._v("Key")]),t._v(" 在列表渲染中非常重要，能显著提升 Diff 效率，避免误判或错误复用节点。")]),t._v(" "),s("li",[s("strong",[t._v("执行过程")]),t._v("：由外到内先对头尾进行快速对比，然后处理中间乱序部分，并进行最小化的 DOM 操作。")]),t._v(" "),s("li",[s("strong",[t._v("性能提升")]),t._v("：相较 Vue 2，Vue 3 在某些场景下（例如大量列表更新、频繁移动节点）表现更佳，也对特殊情况做了更多优化。")])]),t._v(" "),s("p",[t._v("通过这些策略，Vue 3 可以在保持良好开发体验的同时，为大规模、动态内容丰富的应用提供更高效的 UI 更新能力。")]),t._v(" "),s("h3",{attrs:{id:"vue-3-的-dom-diff-流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-的-dom-diff-流程"}},[t._v("#")]),t._v(" Vue 3 的 DOM Diff 流程")]),t._v(" "),s("p",[t._v("在 Vue 3 中，DOM Diff 算法（也称为“Reconciliation”算法）主要负责识别两个 Virtual DOM 之间的差异，并将这些差异最小化地应用到真实 DOM 上。下面是这一流程的详细解读：")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("触发更新")])]),t._v(" "),s("ul",[s("li",[t._v("当组件的状态（"),s("code",[t._v("data")]),t._v(", "),s("code",[t._v("props")]),t._v(", 等）发生改变时，Vue 会触发一次新的渲染过程。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("生成新的 Virtual DOM")])]),t._v(" "),s("ul",[s("li",[t._v("Vue 会将更新后的组件转换生成一个"),s("strong",[t._v("新的")]),t._v(" Virtual DOM 树。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("比较旧的 Virtual DOM 与新的 Virtual DOM")])]),t._v(" "),s("ul",[s("li",[t._v("在渲染时，Vue 会执行 “diff” 算法，找出新旧 Virtual DOM 之间的差异。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("节点对比")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("同类型节点")]),t._v("：如果新旧 VNode 是相同类型（例如，一个 "),s("code",[t._v("div")]),t._v(" 对比另一个 "),s("code",[t._v("div")]),t._v("），则会逐层递归地对比它们的子节点。")]),t._v(" "),s("li",[s("strong",[t._v("类型不同，且 key 不同")]),t._v("：如果确定节点类型或 "),s("code",[t._v("key")]),t._v(" 发生改变，则会认为这是一个全新节点，需要卸载旧节点并挂载新节点。")]),t._v(" "),s("li",[s("strong",[t._v("复用 key 相同的节点")]),t._v("：当两个节点的类型相同且 "),s("code",[t._v("key")]),t._v(" 相同，Vue 会直接对比它们的差异（例如修改 "),s("code",[t._v("class")]),t._v(", "),s("code",[t._v("style")]),t._v(", 自定义属性等），并在必要时更新属性。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("子节点对比")])]),t._v(" "),s("ul",[s("li",[t._v("当从父节点进入到子节点级别时，Vue 会按照一定策略（如首尾双指针法、Longest Stable Subsequence 等）在最小移动量的前提下对比和更新子节点。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("局部 DOM 更新")])]),t._v(" "),s("ul",[s("li",[t._v("根据对比结果，Vue 会仅对变动部分执行"),s("strong",[t._v("真实 DOM 更新")]),t._v("（patch），并在此过程中触发与之关联的生命周期钩子（如 "),s("code",[t._v("updated")]),t._v(", "),s("code",[t._v("mounted")]),t._v(" 等）。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("完成渲染")])]),t._v(" "),s("ul",[s("li",[t._v("当 Vue 将所有差异“补丁”应用到真实 DOM 之后，界面即可呈现最新的状态。")])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("p",[t._v("这一流程使得 Vue 可以在绝大多数情况下仅对变动部分进行精准更新，而不是重新构建整个 DOM 树，大幅提升了性能和效率。这也是为什么 Vue 3 在响应式系统和 Virtual DOM 机制相结合后，能够在大型应用场景下依旧保持流畅交互体验的关键原因之一。")])])}),[],!1,null,null,null);s.default=e.exports}}]);