(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{1102:function(t,a,s){t.exports=s.p+"assets/img/react-1.71f23e62.png"},1103:function(t,a,s){t.exports=s.p+"assets/img/react-2.6fe902b3.png"},1104:function(t,a,s){t.exports=s.p+"assets/img/million-1.2b8397c8.png"},1105:function(t,a,s){t.exports=s.p+"assets/img/setState-1.433c391e.png"},1397:function(t,a,s){"use strict";s.r(a);var e=s(24),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"前端面试小册子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端面试小册子"}},[t._v("#")]),t._v(" 前端面试小册子")]),t._v(" "),a("h2",{attrs:{id:"react30问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react30问"}},[t._v("#")]),t._v(" React30问")]),t._v(" "),a("p",[a("img",{attrs:{src:s(1102),alt:"alt text"}}),t._v(" "),a("img",{attrs:{src:s(1103),alt:"alt text"}})]),t._v(" "),a("h3",{attrs:{id:"react16时间分片的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react16时间分片的原理"}},[t._v("#")]),t._v(" React16时间分片的原理")]),t._v(" "),a("h4",{attrs:{id:"时间分片的核心思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间分片的核心思想"}},[t._v("#")]),t._v(" 时间分片的核心思想")]),t._v(" "),a("p",[t._v("通过一个大任务切分成多个小任务，处理小任务过程中，react会将时间交给浏览器进行高优先级任务，使得用户不会因为单一任务阻塞而感到卡顿。")]),t._v(" "),a("h4",{attrs:{id:"工作原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[t._v("#")]),t._v(" 工作原理")]),t._v(" "),a("ol",[a("li",[t._v("任务切片")])]),t._v(" "),a("p",[t._v("React 将渲染任务拆分成多个可中断的工作单元（Work Unit），每次只处理一个小的工作单元。")]),t._v(" "),a("p",[t._v("在任务执行过程中，React 会定期检查是否有更高优先级的任务需要处理。")]),t._v(" "),a("blockquote"),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("调度机制")])]),t._v(" "),a("p",[t._v("React 使用一个调度器（Scheduler），它基于任务的优先级决定任务的执行顺序。\nReact 会在空闲时间（Idle Time）执行低优先级任务，如果出现高优先级任务，会暂停当前的任务以处理高优先级任务。")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("请求动画帧与消息通道")])]),t._v(" "),a("p",[t._v("React 依赖浏览器的 requestIdleCallback 或 MessageChannel 来实现任务的切片和调度：\nrequestIdleCallback：让 React 在浏览器的空闲时间执行任务。\nMessageChannel：提供微任务的方式，允许更精确的调度。")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("中断与恢复")])]),t._v(" "),a("p",[t._v("如果一个任务被中断，React 会保存当前任务的进度，当有空闲时间时恢复继续执行。")]),t._v(" "),a("p",[t._v("这种中断和恢复的能力使 React 能够更好地处理高优先级任务（如用户输入）。")]),t._v(" "),a("h4",{attrs:{id:"关键机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关键机制"}},[t._v("#")]),t._v(" 关键机制")]),t._v(" "),a("h5",{attrs:{id:"fiber架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fiber架构"}},[t._v("#")]),t._v(" Fiber架构")]),t._v(" "),a("p",[t._v("react的时间分片的核心依赖于Fiber架构，是react16引入新的协调算法")]),t._v(" "),a("blockquote",[a("p",[t._v("Fiber是一种数据结构")])]),t._v(" "),a("ol",[a("li",[t._v("每个react 组件对应一个Fiber节点，记录组件的状态和更新任务")]),t._v(" "),a("li",[t._v("Fiber树通过链表实现（单向链表），方便任务的中断和回复。")])]),t._v(" "),a("blockquote",[a("p",[t._v("双缓存 Fiber 树\n当前屏幕上显示的 Fiber 树称为 current。\n正在计算中的 Fiber 树称为 workInProgress。\nReact 在更新完成后会用 workInProgress 替换 current")])]),t._v(" "),a("blockquote",[a("p",[t._v("优先级调度")])]),t._v(" "),a("p",[t._v("React为每个更新分配优先级，常见的优先级：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("高优先级任务：用户输入，动画更新")])]),t._v(" "),a("li",[a("p",[t._v("低优先级任务： 后台数据加载，列表渲染")])])]),t._v(" "),a("p",[t._v("任务根据优先级放入到任务呢队列中，高优先级打断低优先级")]),t._v(" "),a("h2",{attrs:{id:"浏览器-不支持-requestidlecallback-react-是怎么解决的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器-不支持-requestidlecallback-react-是怎么解决的"}},[t._v("#")]),t._v(" 浏览器 不支持 requestIdleCallback react 是怎么解决的")]),t._v(" "),a("p",[t._v("React 并不完全依赖 requestIdleCallback。它采用了分层的策略：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("优先使用 requestIdleCallback，因为它能精准利用浏览器的空闲时间。\n回退到性能较好的 MessageChannel。\n在最差的情况下使用 setTimeout 作为最终的兼容方案。\n")])])]),a("h2",{attrs:{id:"状态撕裂是如何产生的-如何解决的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#状态撕裂是如何产生的-如何解决的"}},[t._v("#")]),t._v(" 状态撕裂是如何产生的，如何解决的")]),t._v(" "),a("h3",{attrs:{id:"状态撕裂的常见原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#状态撕裂的常见原因"}},[t._v("#")]),t._v(" 状态撕裂的常见原因")]),t._v(" "),a("ol",[a("li",[t._v("多次渲染导致的状态不一致")])]),t._v(" "),a("p",[t._v("React 在 并发模式（Concurrent Mode） 中允许任务的中断和恢复，可能导致某些组件更新了状态，而其他组件还未完成渲染，从而导致状态的不同步。")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("多来源状态的管理")])]),t._v(" "),a("p",[t._v("如果状态通过多种方式共享（例如直接使用全局变量或不正确的上下文管理），可能会导致多个组件对同一个状态的不同视图。")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("不正确的上下文（Context）使用")])]),t._v(" "),a("p",[t._v("当 React 的 useContext 不能正确感知状态更新时，某些订阅了相同上下文的组件可能不会重新渲染，从而显示旧的状态。")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("异步更新和中断")])]),t._v(" "),a("p",[t._v("在 React 的并发模式下，异步任务可能在更新中被中断，导致状态未同步完成。")]),t._v(" "),a("h2",{attrs:{id:"react-的渲染和更新流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-的渲染和更新流程"}},[t._v("#")]),t._v(" React 的渲染和更新流程")]),t._v(" "),a("ol",[a("li",[t._v("初始阶段：\n调和（Reconcile）和 Diff 找到需要更新的部分。\n构建新的 workInProgress Fiber 树。")]),t._v(" "),a("li",[t._v("中间阶段：\n更新 Fiber 树，同时执行 Hooks 和生命周期方法。\n使用双缓冲机制确保安全更新。")]),t._v(" "),a("li",[t._v("提交阶段：\n批量处理并提交 DOM 更新，处理事件合成。\n完成组件的卸载和清理。")])]),t._v(" "),a("h2",{attrs:{id:"million-解决了18什么问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#million-解决了18什么问题"}},[t._v("#")]),t._v(" Million 解决了18什么问题 ？")]),t._v(" "),a("p",[a("img",{attrs:{src:s(1104),alt:"alt text"}})]),t._v(" "),a("p",[t._v("Million.js 是一个轻量级、性能优先的 Virtual DOM 库，旨在替代 React 的 Virtual DOM，同时提供比 React 更快的渲染性能。")]),t._v(" "),a("p",[t._v("引入和BOM（Block vetual Dom）具体的事情和原理")]),t._v(" "),a("p",[t._v("自动memo")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("对动态节点和静态节点的优化 \n")])])]),a("p",[t._v("对于大类型重复节点的优化")]),t._v(" "),a("ol",[a("li",[t._v("React 18 的问题")])]),t._v(" "),a("p",[t._v("a. 并发模式的复杂性")]),t._v(" "),a("p",[t._v("React 18 引入了 Concurrent Mode（并发模式），通过任务中断和优先级调度提升性能，但这也带来了复杂性：")]),t._v(" "),a("p",[t._v("任务调度开销：\nReact 的 Fiber 架构和 Lanes 优先级调度需要维护大量状态，导致调度成本增加。\n中断恢复的代价：\n在复杂组件树中，任务被中断和恢复会带来额外的性能开销。")]),t._v(" "),a("p",[t._v("b. Virtual DOM 的性能瓶颈")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("React 的 Virtual DOM 通过 Diff 算法（Reconcile）来比较新旧状态，但对于大规模更新或频繁更新场景，Diff 操作可能变得非常耗时。\n\n特别是列表渲染和动态内容更新时，React 的逐层对比可能会降低性能。\n")])])]),a("h2",{attrs:{id:"memo-解决了什么问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#memo-解决了什么问题"}},[t._v("#")]),t._v(" memo 解决了什么问题")]),t._v(" "),a("p",[t._v("解决不必要的渲染导致性能的浪费 ， memo 只做了浅比较")]),t._v(" "),a("p",[t._v("vue中使用了静态节点，")]),t._v(" "),a("h2",{attrs:{id:"什么是hoc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是hoc"}},[t._v("#")]),t._v(" 什么是HOC")]),t._v(" "),a("p",[t._v("高阶组件（Higher-Order Component，HOC）是 React 中的一种高级技巧，用于复用组件逻辑。它本质上是一个函数，接收一个组件作为参数，返回一个新的组件。这个新组件通过将原始组件包装在容器组件中，增强了其功能，而不修改原始组件的实现。")]),t._v(" "),a("h2",{attrs:{id:"什么时候应该使用类组件而不是函数组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么时候应该使用类组件而不是函数组件"}},[t._v("#")]),t._v(" 什么时候应该使用类组件而不是函数组件？")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("错误边界\n需要在类组件中实现 static getDerivedStateFromError() 和 componentDidCatch() 方法。")])]),t._v(" "),a("li",[a("p",[t._v("特殊的生命周期方法\n需要精细控制组件更新过程或依赖于 shouldComponentUpdate() 方法进行性能优化时。")])]),t._v(" "),a("li",[a("p",[t._v("PureComponent 和 shouldComponentUpdate")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" PureComponent "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyComponent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PureComponent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Rendering MyComponent'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("App")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button onClick"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setText")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Update Text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("MyComponent text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Component "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyComponent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldComponentUpdate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nextProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只有当 text 发生变化时，才允许重新渲染")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" nextProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Rendering MyComponent'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("App")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button onClick"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setText")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Update Text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("MyComponent text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"react中如何创建refs-创建refs的方式有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react中如何创建refs-创建refs的方式有什么区别"}},[t._v("#")]),t._v(" React中如何创建Refs?创建Refs的方式有什么区别？")]),t._v(" "),a("h3",{attrs:{id:"什么是-refs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-refs"}},[t._v("#")]),t._v(" 什么是 Refs？")]),t._v(" "),a("p",[t._v("在 React 中，**Refs（引用）**是一个允许我们直接访问 DOM 元素或组件实例的方法。通过 Refs，可以：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("获取并操作 DOM 元素\n存储任何可变值，不触发组件重新渲染\n访问组件实例的方法和属性（在类组件中）\n")])])]),a("p",[t._v("React 提供了多种方式来创建 Refs，主要包括：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("1、React.createRef()（用于类组件）\n2、useRef() Hook（用于函数组件）\n3、回调 Refs\n4、forwardRef 和 useImperativeHandle（用于转发和自定义 Refs）    \n")])])]),a("h2",{attrs:{id:"createcontext解决了什么问题-react父组件如何与子组件通信-子组件如何改变父组件的状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#createcontext解决了什么问题-react父组件如何与子组件通信-子组件如何改变父组件的状态"}},[t._v("#")]),t._v(" createContext解决了什么问题？React父组件如何与子组件通信？子组件如何改变父组件的状态？")]),t._v(" "),a("p",[t._v("createContext 是 React 提供的上下文（Context）API，用于在组件树中共享数据，而无需手动地通过每层组件传递 props。它主要解决了以下问题：")]),t._v(" "),a("p",[t._v("避免“属性逐层传递”（Props Drilling）问题：")]),t._v(" "),a("p",[t._v("**问题描述：**在组件嵌套层级较深的情况下，父组件需要将数据通过 props 一层一层地传递给深层的子组件，即使中间的组件并不需要这些数据。")]),t._v(" "),a("p",[t._v("**影响：**导致中间组件的代码冗余，增加了维护成本，使组件间的耦合度提高。")]),t._v(" "),a("p",[t._v("实现全局状态共享：")]),t._v(" "),a("p",[t._v("**应用场景：**主题切换、多语言支持、用户身份信息等需要在整个应用程序中共享的数据。")]),t._v(" "),a("p",[t._v("**优势：**通过 Context，可以在任意深度的组件中访问共享的数据，无需繁琐的 props 传递。")]),t._v(" "),a("h2",{attrs:{id:"react-memo-有什么用途-usememo-和-memo-的区别是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-memo-有什么用途-usememo-和-memo-的区别是什么"}},[t._v("#")]),t._v(" React.memo 有什么用途，useMemo 和 memo 的区别是什么？")]),t._v(" "),a("blockquote",[a("p",[t._v("React.memo 是 React 提供的一个高阶组件（Higher Order Component，HOC），用于**记忆（Memoization）**函数组件的渲染结果。当组件接收到相同的 props 时，React.memo 可以避免不必要的重新渲染，提升性能。")])]),t._v(" "),a("blockquote",[a("p",[t._v("useMemo 是 React 提供的一个 Hook，用于在函数组件中记忆计算结果。它会在依赖项发生变化时重新计算值，避免每次渲染都执行耗时的计算。")])]),t._v(" "),a("h2",{attrs:{id:"usecallback和usememo有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usecallback和usememo有什么区别"}},[t._v("#")]),t._v(" useCallback和useMemo有什么区别？")]),t._v(" "),a("blockquote",[a("p",[t._v("useCallback：用于记忆函数，避免函数在组件每次渲染时都被重新创建。 memoized 函数")])]),t._v(" "),a("blockquote",[a("p",[t._v("useMemo：用于记忆计算结果（值），避免在依赖未变化时重复计算。memoized 值")])]),t._v(" "),a("h2",{attrs:{id:"usestate是同步还是异步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usestate是同步还是异步"}},[t._v("#")]),t._v(" useState是同步还是异步")]),t._v(" "),a("p",[t._v("React18版本以前同步环境中异步，在异步环境中同步。在React18以后，setState不论是同步还是异步都是异步的")]),t._v(" "),a("p",[a("img",{attrs:{src:s(1105),alt:"alt text"}})]),t._v(" "),a("h2",{attrs:{id:"如何选择状态管理库-什么是状态撕裂"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何选择状态管理库-什么是状态撕裂"}},[t._v("#")]),t._v(" 如何选择状态管理库 什么是状态撕裂")]),t._v(" "),a("p",[t._v("Jotai 组件内状态\nZustand 组件外状态")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://stately.ai/viz",target:"_blank",rel:"noopener noreferrer"}},[t._v("Xstate 状态机"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"自己实现hooks关键点在哪里"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自己实现hooks关键点在哪里"}},[t._v("#")]),t._v(" 自己实现Hooks关键点在哪里")]),t._v(" "),a("h2",{attrs:{id:"实现rect的具体业务的时候ts类型不知道怎么设置你会怎么办"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现rect的具体业务的时候ts类型不知道怎么设置你会怎么办"}},[t._v("#")]),t._v(" 实现Rect的具体业务的时候TS类型不知道怎么设置你会怎么办？")]),t._v(" "),a("p",[t._v("翻阅React.d.ts 的文档")]),t._v(" "),a("p",[t._v("command+ 点进去。")]),t._v(" "),a("h2",{attrs:{id:"react和其他框架对比的优缺点-选择react的理由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react和其他框架对比的优缺点-选择react的理由"}},[t._v("#")]),t._v(" React和其他框架对比的优缺点？ 选择react的理由？")]),t._v(" "),a("p",[t._v("react对ts支持很丝滑\n对于各种框架支持性也很友好 比如 Svelte  Million Solid Qwik 等前端框架，Svelte是去runtime ，Solid是去虚拟DOM的 ，Qwik是去调和的")]),t._v(" "),a("p",[t._v("Svelte 被称为**“无运行时”框架（no runtime framework），其核心思想在于，它不是在运行时去处理框架逻辑，而是在编译阶段**完成所有工作。")]),t._v(" "),a("p",[t._v("Solid.js 被称为**“无虚拟 DOM”框架（no virtual DOM framework），因为它摒弃了传统前端框架（如 React、Vue）中使用虚拟 DOM 来实现视图更新的机制，直接操作真实 DOM，并通过高效的细粒度响应系统**实现了卓越的性能。")]),t._v(" "),a("p",[t._v("Qwik 被称为**“去调和”框架（resumability framework）**，其核心理念是跳过传统前端框架的调和（hydration）过程，直接在浏览器中恢复（resume）服务端生成的状态和交互功能。这种创新模式显著提升了性能，尤其在初次加载和交互时表现出色。")]),t._v(" "),a("p",[t._v("丝滑的函数组件和hooks :每个单独组件有自己的状态和逻辑，可以单独的测试和复用")]),t._v(" "),a("p",[t._v("已有技术栈和团队经验")]),t._v(" "),a("p",[t._v("丰富的组件与工具生态")]),t._v(" "),a("p",[t._v("人才市场与招聘便利")]),t._v(" "),a("p",[t._v("适应多种业务场景")]),t._v(" "),a("p",[t._v("长期维护与升级成本低")])])}),[],!1,null,null,null);a.default=n.exports}}]);