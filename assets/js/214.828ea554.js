(window.webpackJsonp=window.webpackJsonp||[]).push([[214],{1362:function(t,a,s){"use strict";s.r(a);var e=s(24),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"大模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大模型"}},[t._v("#")]),t._v(" 大模型")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Getting started with our "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" and git-lfs interface\n\nYou can create a repository from the CLI "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("skip "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" you created a repo from the website"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\npip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" huggingface_hub\nYou already have it "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" you installed transformers or datasets\n\nhuggingface-cli login\nLog "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" using a token from huggingface.co/settings/tokens\nCreate a model or dataset repo from the CLI "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" needed\nhuggingface-cli repo create repo_name "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("model, dataset, space"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nClone your model, dataset or Space locally\n\nMake sure you have git-lfs installed\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("https://git-lfs.github.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" lfs "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://huggingface.co/username/repo_name\nThen add, commit and push any "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" you want, including larges files\n\n save files via "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v(".save_pretrained"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" or move them here\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commit from '),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$USER")]),t._v('"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\nIn "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("most")]),t._v(" cases, "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" you're using one of the compatible libraries, your repo will "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" be accessible from code, through its identifier: username/repo_name\n\nFor example "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" a transformers model, anyone can load it with:\n\ntokenizer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AutoTokenizer.from_pretrained"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username/repo_name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmodel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AutoModel.from_pretrained"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username/repo_name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("python "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" venv venv\n\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" venv/Scripts/activate\n\npython webui.py "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--lowvram")]),t._v("\n\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);