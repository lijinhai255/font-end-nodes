(window.webpackJsonp=window.webpackJsonp||[]).push([[242],{1415:function(t,i,e){"use strict";e.r(i);var v=e(24),_=Object(v.a)({},(function(){var t=this,i=t._self._c;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h2",{attrs:{id:"git的相关用法"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git的相关用法"}},[t._v("#")]),t._v(" git的相关用法")]),t._v(" "),i("ol",[i("li",[i("p",[t._v("git pull origin main")])]),t._v(" "),i("li",[i("p",[t._v("git tag -a "),i("code",[t._v("<tagName>")]),t._v(" -m <描述>")])]),t._v(" "),i("li",[i("p",[t._v("git push --tags:打tag格式，严格按照此格式写")])]),t._v(" "),i("li",[i("p",[t._v("git diff")])]),t._v(" "),i("li")]),t._v(" "),i("div",{staticClass:"language-text extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("\n（格式： tag-release-20220125（日期）-v1.1.1(项目版本号)-01(当日发版次数)， 如： tag-release-20220125-v0.12.0-01）\n\n")])])]),i("ol",{attrs:{start:"7"}},[i("li",[t._v("git版本回退")])]),t._v(" "),i("ul",[i("li",[t._v("git reflog 查看命令操作的历史")]),t._v(" "),i("li",[t._v("git log命令可以显示当前分支所有提交过的版本信息，不包括已经被删除的 commit 记录和reset的操作。(注意: 只是当前分支操作的信息)。")]),t._v(" "),i("li",[t._v("git reflog命令可以查看所有分支的所有操作记录信息（包括已经被删除的 commit 记录和 reset 的操作）。")]),t._v(" "),i("li",[t._v("git reset --hard commit_id回退版本")]),t._v(" "),i("li",[t._v("git reset 后, 本地版本回退了, 但无法直接 push 到远程仓库(因为远程仓库版本更加新) git push -f覆盖推送即可")]),t._v(" "),i("li",[t._v("回退前，用git log可以查看提交历史，以确定要回退的commit_id。")]),t._v(" "),i("li",[t._v("如果后悔回退了，用git reflog查看命令历史，以便确定要回到的版本的commit_id。")])]),t._v(" "),i("ol",{attrs:{start:"8"}},[i("li",[t._v("git switch -c "),i("code",[t._v("<分支名>")])])]),t._v(" "),i("blockquote",[i("p",[t._v("代表创建分支并进入、相当于 git checkout -b 分支名")])]),t._v(" "),i("ol",{attrs:{start:"9"}},[i("li",[i("p",[t._v("git push -origin "),i("code",[t._v("<分支名>")])])]),t._v(" "),i("li",[i("p",[t._v("git fetch 拉去所有分支")])]),t._v(" "),i("li",[i("p",[t._v("git checkout "),i("code",[t._v("<分支名>")])])]),t._v(" "),i("li",[i("p",[t._v("git merge  "),i("code",[t._v("<分支名>")])])]),t._v(" "),i("li",[i("p",[t._v("git remote prune origin")])])]),t._v(" "),i("blockquote",[i("p",[t._v("当我们删除远程分支后执行 git branch -a 本地却依然能看到远程分支 这个时候我们只需要执行 git remote prune origin 清理一下就可以了")])]),t._v(" "),i("ol",{attrs:{start:"14"}},[i("li",[t._v("git stash")])]),t._v(" "),i("blockquote",[i("p",[t._v("把当前分支修改的内容放到一边,然后 git checkout -b feature-logout\ngit stash pop 缓存的内容推出")])]),t._v(" "),i("h2",{attrs:{id:"常见的-git-分支命名规范的建议"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#常见的-git-分支命名规范的建议"}},[t._v("#")]),t._v(" 常见的 Git 分支命名规范的建议：")]),t._v(" "),i("h3",{attrs:{id:"主要分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#主要分支"}},[t._v("#")]),t._v(" 主要分支：")]),t._v(" "),i("ul",[i("li",[t._v("main 分支：主要用于发布稳定版本的代码。可以用其他名称如 master 替代，取决于团队的约定。")]),t._v(" "),i("li",[t._v("develop 分支：用于整合各种特性分支，进行开发和集成测试。")])]),t._v(" "),i("h3",{attrs:{id:"特性分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#特性分支"}},[t._v("#")]),t._v(" 特性分支：")]),t._v(" "),i("ul",[i("li",[t._v("特性分支用于开发新功能或解决特定问题。")]),t._v(" "),i("li",[t._v("命名规范：建议使用以下格式：")]),t._v(" "),i("li",[t._v("feature/"),i("code",[t._v("<feature-name>")]),t._v("：用于新功能开发，例如 feature/user-authentication。")]),t._v(" "),i("li",[t._v("bugfix/"),i("code",[t._v("<bug-description>")]),t._v("：用于修复特定问题，例如 bugfix/fix-login-issue。")])]),t._v(" "),i("h3",{attrs:{id:"发布分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#发布分支"}},[t._v("#")]),t._v(" 发布分支：")]),t._v(" "),i("ul",[i("li",[t._v("发布分支用于准备发布版本。")]),t._v(" "),i("li",[t._v("命名规范：可以使用以下格式：")]),t._v(" "),i("li",[t._v("release/"),i("code",[t._v("<version-number>")]),t._v("：用于准备发布的版本，例如 release/1.0.0。")])]),t._v(" "),i("h3",{attrs:{id:"热修复分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#热修复分支"}},[t._v("#")]),t._v(" 热修复分支：")]),t._v(" "),i("ul",[i("li",[t._v("用于紧急修复生产环境中的问题。")]),t._v(" "),i("li",[t._v("命名规范：可以使用以下格式：")]),t._v(" "),i("li",[t._v("hotfix/"),i("code",[t._v("<issue-description>")]),t._v("：例如 hotfix/fix-security-issue。\n个人分支：")]),t._v(" "),i("li",[t._v("每个开发人员可以创建自己的个人分支来进行开发工作。")]),t._v(" "),i("li",[t._v("命名规范：可以使用以下格式：")]),t._v(" "),i("li",[t._v("user/"),i("code",[t._v("<username>/<feature-name>")]),t._v("：例如 user/johndoe/new-feature。")])]),t._v(" "),i("h3",{attrs:{id:"临时分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#临时分支"}},[t._v("#")]),t._v(" 临时分支：")]),t._v(" "),i("ul",[i("li",[t._v("有时需要创建临时性的分支来进行实验、测试或快速修复。")]),t._v(" "),i("li",[t._v("命名规范：可以使用以下格式：")]),t._v(" "),i("li",[t._v("temp/"),i("code",[t._v("<description>")]),t._v("：例如 temp/experiment-with-new-feature。")])]),t._v(" "),i("h3",{attrs:{id:"任务分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#任务分支"}},[t._v("#")]),t._v(" 任务分支：")]),t._v(" "),i("ul",[i("li",[t._v("有些团队根据任务或问题创建分支。")]),t._v(" "),i("li",[t._v("命名规范：可以使用以下格式：")]),t._v(" "),i("li",[t._v("task/"),i("code",[t._v("<task-id>/<description>")]),t._v("：例如 task/123/implement-search-feature。")])]),t._v(" "),i("h3",{attrs:{id:"版本标签"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#版本标签"}},[t._v("#")]),t._v(" 版本标签：")]),t._v(" "),i("ul",[i("li",[t._v("版本标签用于标识发布的版本号。")]),t._v(" "),i("li",[t._v("命名规范：可以使用语义版本号格式，例如 v1.0.0。")]),t._v(" "),i("li",[t._v("确保团队成员都理解并遵守这些规范。")])]),t._v(" "),i("div",{staticClass:"language-text extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v('On branch prod\nYour branch is ahead of \'origin/prod\' by 7 commits.\n  (use "git push" to publish your local commits)\n\nCherry-pick currently in progress.\n  (run "git cherry-pick --continue" to continue)\n  (use "git cherry-pick --skip" to skip this patch)\n  (use "git cherry-pick --abort" to cancel the cherry-pick operation)\n')])])])])}),[],!1,null,null,null);i.default=_.exports}}]);